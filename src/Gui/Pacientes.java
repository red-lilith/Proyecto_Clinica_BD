/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Controlador.*;
import Logica.*;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JMonthChooser;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ennuikibun
 */
public class Pacientes extends javax.swing.JFrame {

    Vista_Control vista_control;
    String var1,var2,var3,var4,var5,var6,var7;
    private static final DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    Persona_Control persona_control;
    Paciente_Control paciente_control;
    Historia_Control historia_control;
    Registro_Control registro_control;
    Causa_Control causa_control;
    Medicamento_Control medicamento_control;
    Cama_Control cama_control;
    AsignaCama_Control asignaCama_control;
    Formula_Control formula_control;
    Formulacion_Control formulacion_control;
    CausaConsulta_Control causaConsulta_control;
    
    int paciente_historia;
    
    public Pacientes(Vista_Control vista) {
        super("Cl√≠nica X || Pacientes");
        initComponents();
        asigCama_group.add(si_button);
        asigCama_group.add(no_button);
        pacientes_panel.setVisible(true);
        facturacion_panel.setVisible(false);
        historia_tabbed.setVisible(false);
        
        registros_table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        setLocationRelativeTo(null);
	setSize(1190, 630);
	setResizable(false);
        
        paciente_historia = 0;
        
        persona_control = new Persona_Control();
        paciente_control = new Paciente_Control();
        historia_control = new Historia_Control();
        registro_control = new Registro_Control();
        causa_control = new Causa_Control();
        medicamento_control = new Medicamento_Control();
        cama_control = new Cama_Control();
        asignaCama_control = new AsignaCama_Control();
        formula_control = new Formula_Control();
        formulacion_control = new Formulacion_Control();
        causaConsulta_control = new CausaConsulta_Control();
        
        vista_control = vista;
        
        addCombos();
    }

    private void addCombos(){
        Vector <String> medicos = new Vector<String>();
        medicos = persona_control.listarMedicos();
        medicoRegi_box.removeAllItems();
        for(int i = 0; i < medicos.size(); i++){
            String m = medicos.get(i);
            medicoRegi_box.addItem(m);
        }
        Vector <Medicamento> medicamentos = new Vector<Medicamento>();
        medicamentos = medicamento_control.listarMedicamentos();
        medicamentos_box.removeAllItems();
        medicamentos_box.addItem("Ninguno");
        for(int i = 0; i < medicamentos.size(); i++){
            String m = medicamentos.get(i).getNomMedicamento();
            medicamentos_box.addItem(m);
        }
        Vector <Cama> camas = new Vector<Cama>();
        camas = cama_control.listarCamas();
        numCama_box.removeAllItems();
        for(int i = 0; i < camas.size(); i++){
            String m = String.valueOf(camas.get(i).getNumero());
            numCama_box.addItem(m);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        asigCama_group = new javax.swing.ButtonGroup();
        facturacion_panel = new javax.swing.JPanel();
        horiz_separator1 = new javax.swing.JSeparator();
        vert_separator1 = new javax.swing.JSeparator();
        agenda_label = new javax.swing.JLabel();
        agendamensual_label = new javax.swing.JLabel();
        toolbar_users_areas2 = new javax.swing.JToolBar();
        filter_button2 = new javax.swing.JButton();
        clear_button1 = new javax.swing.JButton();
        search_button3 = new javax.swing.JButton();
        numCitas_text1 = new javax.swing.JLabel();
        year = new com.toedter.calendar.JYearChooser();
        agenda_label1 = new javax.swing.JLabel();
        agenda_label2 = new javax.swing.JLabel();
        costo1 = new javax.swing.JLabel();
        agenda_label4 = new javax.swing.JLabel();
        agenda_label5 = new javax.swing.JLabel();
        costo2 = new javax.swing.JLabel();
        back_button2 = new javax.swing.JButton();
        opciones_panel = new javax.swing.JPanel();
        opciones_agendar_toolbar = new javax.swing.JToolBar();
        pacientes_button = new javax.swing.JButton();
        histoClinica_button = new javax.swing.JButton();
        facturacion_button = new javax.swing.JButton();
        historia_tabbed = new javax.swing.JTabbedPane();
        historia_panel = new javax.swing.JPanel();
        num_label = new javax.swing.JLabel();
        fechaNacimiento_label = new javax.swing.JLabel();
        nomPaciente_label = new javax.swing.JLabel();
        segSS_label = new javax.swing.JLabel();
        direccion_label = new javax.swing.JLabel();
        telPaciente_label = new javax.swing.JLabel();
        act_Eco_label = new javax.swing.JLabel();
        numHist_text = new javax.swing.JLabel();
        nomPaciente_text = new javax.swing.JLabel();
        fecha_naci_text = new javax.swing.JLabel();
        dir_text = new javax.swing.JLabel();
        act_eco_text = new javax.swing.JLabel();
        segSS_text = new javax.swing.JLabel();
        tel_text = new javax.swing.JLabel();
        fecha_aper_label = new javax.swing.JLabel();
        fecha_aper_text = new javax.swing.JLabel();
        back_button1 = new javax.swing.JButton();
        registros_scroll = new javax.swing.JScrollPane();
        registros_table = new javax.swing.JTable();
        regConsultas_label = new javax.swing.JLabel();
        toolbar_users_areas1 = new javax.swing.JToolBar();
        ver_button = new javax.swing.JButton();
        filter_button1 = new javax.swing.JButton();
        todo_button = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        agregarRegistro_panel = new javax.swing.JPanel();
        fechaCons_label = new javax.swing.JLabel();
        medicoReg_label = new javax.swing.JLabel();
        Info_label = new javax.swing.JLabel();
        causas_label = new javax.swing.JLabel();
        cama_label = new javax.swing.JLabel();
        precio_label = new javax.swing.JLabel();
        si_button = new javax.swing.JRadioButton();
        no_button = new javax.swing.JRadioButton();
        formula_label = new javax.swing.JLabel();
        causa_label = new javax.swing.JLabel();
        descripCausa_label = new javax.swing.JLabel();
        descripCausa_scroll = new javax.swing.JScrollPane();
        descripCausa_area = new javax.swing.JTextArea();
        agregarCausa = new javax.swing.JButton();
        medicamentos_label = new javax.swing.JLabel();
        medicamentos_box = new javax.swing.JComboBox<>();
        guardarRegistro_button = new javax.swing.JButton();
        horiz_separator = new javax.swing.JSeparator();
        vertical_separator = new javax.swing.JSeparator();
        precio_field = new javax.swing.JTextField();
        medicoRegi_box = new javax.swing.JComboBox<>();
        fechaRegis = new com.toedter.calendar.JDateChooser();
        agregarMedicamento = new javax.swing.JButton();
        causa_field = new javax.swing.JTextField();
        numCama_box = new javax.swing.JComboBox<>();
        codCama_label = new javax.swing.JLabel();
        limpiarcausas = new javax.swing.JButton();
        limpiarformula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        causas_tabla = new javax.swing.JTable();
        fechaCons_label1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        medicam_tabla = new javax.swing.JTable();
        cod_reg_label = new javax.swing.JLabel();
        cod_reg_field = new javax.swing.JTextField();
        descripCausa_scroll1 = new javax.swing.JScrollPane();
        dosis_area = new javax.swing.JTextArea();
        descripCausa_label1 = new javax.swing.JLabel();
        pacientes_panel = new javax.swing.JPanel();
        personal_info_label4 = new javax.swing.JLabel();
        id_label = new javax.swing.JLabel();
        id_field = new javax.swing.JTextField();
        name_label = new javax.swing.JLabel();
        name_field = new javax.swing.JTextField();
        dir_label = new javax.swing.JLabel();
        dir_field = new javax.swing.JTextField();
        tel_label = new javax.swing.JLabel();
        tel_field = new javax.swing.JTextField();
        aditional_info_label3 = new javax.swing.JLabel();
        num_ss_label = new javax.swing.JLabel();
        num_ss_field = new javax.swing.JTextField();
        nacimiento_label = new javax.swing.JLabel();
        fecha_chooser = new com.toedter.calendar.JDateChooser();
        activ_Econ_field = new javax.swing.JTextField();
        acti_econ_label = new javax.swing.JLabel();
        guardar_button = new javax.swing.JButton();
        actualizar_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();
        pacientes_toolbar = new javax.swing.JToolBar();
        search_button4 = new javax.swing.JButton();
        delete_button4 = new javax.swing.JButton();
        clear_button4 = new javax.swing.JButton();
        registroPacientes_scrollPane1 = new javax.swing.JScrollPane();
        pacientes_table = new javax.swing.JTable();
        registers_label4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        facturacion_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        vert_separator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        agenda_label.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agenda_label.setText("Costos de Pacientes:");

        agendamensual_label.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agendamensual_label.setText("Facturacion Anual");

        toolbar_users_areas2.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas2.setRollover(true);
        toolbar_users_areas2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas2MousePressed(evt);
            }
        });

        filter_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button2.setForeground(new java.awt.Color(99, 110, 111));
        filter_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button2.setToolTipText("");
        filter_button2.setAlignmentY(0.1F);
        filter_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button2.setFocusable(false);
        filter_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button2.setIconTextGap(5);
        filter_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button2.setName("doctor_button"); // NOI18N
        filter_button2.setPreferredSize(new java.awt.Dimension(53, 53));
        filter_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button2MousePressed(evt);
            }
        });
        toolbar_users_areas2.add(filter_button2);

        clear_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button1.setForeground(new java.awt.Color(99, 110, 111));
        clear_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button1.setToolTipText("");
        clear_button1.setAlignmentY(0.1F);
        clear_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button1.setFocusable(false);
        clear_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button1.setIconTextGap(5);
        clear_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button1.setName("doctor_button"); // NOI18N
        clear_button1.setPreferredSize(new java.awt.Dimension(53, 53));
        clear_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button1MousePressed(evt);
            }
        });
        toolbar_users_areas2.add(clear_button1);

        search_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button3.setForeground(new java.awt.Color(99, 110, 111));
        search_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/confirm_ .png"))); // NOI18N
        search_button3.setToolTipText("");
        search_button3.setAlignmentY(0.1F);
        search_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button3.setIconTextGap(5);
        search_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button3.setName("doctor_button"); // NOI18N
        search_button3.setPreferredSize(new java.awt.Dimension(53, 53));
        search_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button3MousePressed(evt);
            }
        });

        numCitas_text1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numCitas_text1.setText("Seleccione un A√±o");

        agenda_label1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agenda_label1.setText("Promedio por medicamentos:");

        agenda_label2.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agenda_label2.setText("Promedio por consultas:");

        costo1.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        costo1.setForeground(new java.awt.Color(0, 204, 0));
        costo1.setText("0");

        agenda_label4.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        agenda_label4.setForeground(new java.awt.Color(0, 204, 0));
        agenda_label4.setText("$");

        agenda_label5.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        agenda_label5.setForeground(new java.awt.Color(0, 204, 0));
        agenda_label5.setText("$");

        costo2.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        costo2.setForeground(new java.awt.Color(0, 204, 0));
        costo2.setText("0");

        back_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button2.setBorderPainted(false);
        back_button2.setContentAreaFilled(false);
        back_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button2.setFocusable(false);
        back_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout facturacion_panelLayout = new javax.swing.GroupLayout(facturacion_panel);
        facturacion_panel.setLayout(facturacion_panelLayout);
        facturacion_panelLayout.setHorizontalGroup(
            facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturacion_panelLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(agenda_label))
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(agenda_label2)
                            .addComponent(agenda_label1))
                        .addGap(28, 28, 28)
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(facturacion_panelLayout.createSequentialGroup()
                                .addComponent(agenda_label4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(costo1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(facturacion_panelLayout.createSequentialGroup()
                                .addComponent(agenda_label5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(costo2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(28, 28, 28)
                .addComponent(vert_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(numCitas_text1))
                    .addComponent(agendamensual_label)
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(toolbar_users_areas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(111, 111, 111))
            .addComponent(horiz_separator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturacion_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(back_button2)
                .addGap(60, 60, 60))
        );
        facturacion_panelLayout.setVerticalGroup(
            facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturacion_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back_button2)
                .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(horiz_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(facturacion_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vert_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(facturacion_panelLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(agendamensual_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numCitas_text1)
                                .addGap(29, 29, 29)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search_button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(toolbar_users_areas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(facturacion_panelLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(agenda_label)
                        .addGap(65, 65, 65)
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agenda_label2)
                            .addComponent(costo1)
                            .addComponent(agenda_label4))
                        .addGap(43, 43, 43)
                        .addGroup(facturacion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agenda_label1)
                            .addComponent(costo2)
                            .addComponent(agenda_label5))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        getContentPane().add(facturacion_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 1040, 600));

        opciones_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        opciones_panel.setMaximumSize(new java.awt.Dimension(160, 660));
        opciones_panel.setPreferredSize(new java.awt.Dimension(160, 660));

        opciones_agendar_toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        opciones_agendar_toolbar.setRollover(true);
        opciones_agendar_toolbar.setPreferredSize(new java.awt.Dimension(162, 552));

        pacientes_button.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        pacientes_button.setForeground(new java.awt.Color(99, 110, 111));
        pacientes_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/paciente_.png"))); // NOI18N
        pacientes_button.setText("Gestionar Paciente");
        pacientes_button.setToolTipText("");
        pacientes_button.setAlignmentY(0.1F);
        pacientes_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pacientes_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pacientes_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pacientes_button.setIconTextGap(-10);
        pacientes_button.setMaximumSize(new java.awt.Dimension(159, 181));
        pacientes_button.setMinimumSize(new java.awt.Dimension(159, 181));
        pacientes_button.setPreferredSize(new java.awt.Dimension(220, 180));
        pacientes_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        pacientes_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pacientes_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pacientes_buttonMousePressed(evt);
            }
        });
        pacientes_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacientes_buttonActionPerformed(evt);
            }
        });
        opciones_agendar_toolbar.add(pacientes_button);

        histoClinica_button.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        histoClinica_button.setForeground(new java.awt.Color(99, 110, 111));
        histoClinica_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clinicalhistory_.png"))); // NOI18N
        histoClinica_button.setText("Historia Cl√≠nica");
        histoClinica_button.setToolTipText("");
        histoClinica_button.setAlignmentY(0.1F);
        histoClinica_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        histoClinica_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        histoClinica_button.setFocusable(false);
        histoClinica_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        histoClinica_button.setIconTextGap(0);
        histoClinica_button.setPreferredSize(new java.awt.Dimension(220, 180));
        histoClinica_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        histoClinica_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        histoClinica_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                histoClinica_buttonMousePressed(evt);
            }
        });
        histoClinica_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histoClinica_buttonActionPerformed(evt);
            }
        });
        opciones_agendar_toolbar.add(histoClinica_button);

        facturacion_button.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        facturacion_button.setForeground(new java.awt.Color(99, 110, 111));
        facturacion_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/factura_.png"))); // NOI18N
        facturacion_button.setText("Facturaci√≥n");
        facturacion_button.setToolTipText("");
        facturacion_button.setAlignmentY(0.1F);
        facturacion_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        facturacion_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        facturacion_button.setFocusable(false);
        facturacion_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        facturacion_button.setIconTextGap(-5);
        facturacion_button.setMaximumSize(new java.awt.Dimension(159, 181));
        facturacion_button.setMinimumSize(new java.awt.Dimension(159, 181));
        facturacion_button.setPreferredSize(new java.awt.Dimension(220, 180));
        facturacion_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        facturacion_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        facturacion_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                facturacion_buttonMousePressed(evt);
            }
        });
        opciones_agendar_toolbar.add(facturacion_button);

        javax.swing.GroupLayout opciones_panelLayout = new javax.swing.GroupLayout(opciones_panel);
        opciones_panel.setLayout(opciones_panelLayout);
        opciones_panelLayout.setHorizontalGroup(
            opciones_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opciones_panelLayout.createSequentialGroup()
                .addComponent(opciones_agendar_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, Short.MAX_VALUE)
                .addGap(106, 106, 106))
        );
        opciones_panelLayout.setVerticalGroup(
            opciones_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opciones_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opciones_agendar_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 555, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );

        getContentPane().add(opciones_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 600));

        historia_tabbed.setBackground(new java.awt.Color(242, 241, 240));
        historia_tabbed.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        historia_tabbed.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        num_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        num_label.setText("Historia No. ");

        fechaNacimiento_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        fechaNacimiento_label.setText("Fecha de Nacimiento:");

        nomPaciente_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        nomPaciente_label.setText("Nombre del Paciente:");

        segSS_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        segSS_label.setText("Seguridad Social No.");

        direccion_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        direccion_label.setText("Direcci√≥n:");

        telPaciente_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        telPaciente_label.setText("Tel√©fono:");

        act_Eco_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        act_Eco_label.setText("Actividad Econ√≥mica:");

        numHist_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numHist_text.setText("numero");

        nomPaciente_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        nomPaciente_text.setText("nombre del paciente");

        fecha_naci_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        fecha_naci_text.setText("dia/mes/a√±o");

        dir_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        dir_text.setText("direccion");

        act_eco_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        act_eco_text.setText("actividad econ√≥mica");

        segSS_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        segSS_text.setText("numero");

        tel_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        tel_text.setText("telefono");

        fecha_aper_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        fecha_aper_label.setText("Fecha Apertura Historia:");

        fecha_aper_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        fecha_aper_text.setText("dia/mes/a√±o");

        back_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button1.setBorderPainted(false);
        back_button1.setContentAreaFilled(false);
        back_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button1.setFocusable(false);
        back_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button1MousePressed(evt);
            }
        });

        registros_table.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        registros_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "M√©dico", "Fecha Consulta", "Formula No.", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        registros_scroll.setViewportView(registros_table);
        if (registros_table.getColumnModel().getColumnCount() > 0) {
            registros_table.getColumnModel().getColumn(4).setMinWidth(100);
            registros_table.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        regConsultas_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        regConsultas_label.setText("Registros");

        toolbar_users_areas1.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas1.setRollover(true);
        toolbar_users_areas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas1MousePressed(evt);
            }
        });

        ver_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        ver_button.setForeground(new java.awt.Color(99, 110, 111));
        ver_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/ver_.png"))); // NOI18N
        ver_button.setToolTipText("");
        ver_button.setAlignmentY(0.1F);
        ver_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ver_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ver_button.setFocusable(false);
        ver_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ver_button.setIconTextGap(5);
        ver_button.setMaximumSize(new java.awt.Dimension(129, 129));
        ver_button.setMinimumSize(new java.awt.Dimension(129, 129));
        ver_button.setName("doctor_button"); // NOI18N
        ver_button.setPreferredSize(new java.awt.Dimension(53, 53));
        ver_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ver_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ver_buttonMousePressed(evt);
            }
        });
        ver_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_buttonActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(ver_button);

        filter_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button1.setForeground(new java.awt.Color(99, 110, 111));
        filter_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button1.setToolTipText("");
        filter_button1.setAlignmentY(0.1F);
        filter_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button1.setFocusable(false);
        filter_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button1.setIconTextGap(5);
        filter_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button1.setName("doctor_button"); // NOI18N
        filter_button1.setPreferredSize(new java.awt.Dimension(53, 53));
        filter_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button1MousePressed(evt);
            }
        });
        filter_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(filter_button1);

        todo_button.setFont(new java.awt.Font("Lucida Bright", 1, 16)); // NOI18N
        todo_button.setForeground(new java.awt.Color(99, 110, 111));
        todo_button.setText("Mostrar Todo");
        todo_button.setToolTipText("");
        todo_button.setAlignmentY(0.1F);
        todo_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        todo_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        todo_button.setFocusable(false);
        todo_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        todo_button.setIconTextGap(5);
        todo_button.setMaximumSize(new java.awt.Dimension(129, 129));
        todo_button.setMinimumSize(new java.awt.Dimension(129, 129));
        todo_button.setName("doctor_button"); // NOI18N
        todo_button.setPreferredSize(new java.awt.Dimension(53, 53));
        todo_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        todo_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                todo_buttonMousePressed(evt);
            }
        });
        todo_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todo_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout historia_panelLayout = new javax.swing.GroupLayout(historia_panel);
        historia_panel.setLayout(historia_panelLayout);
        historia_panelLayout.setHorizontalGroup(
            historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historia_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historia_panelLayout.createSequentialGroup()
                                .addComponent(nomPaciente_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fecha_aper_label)
                                    .addComponent(nomPaciente_text, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fecha_aper_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(historia_panelLayout.createSequentialGroup()
                                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(act_Eco_label)
                                    .addGroup(historia_panelLayout.createSequentialGroup()
                                        .addComponent(fechaNacimiento_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fecha_naci_text, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(historia_panelLayout.createSequentialGroup()
                                        .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(act_eco_text, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(historia_panelLayout.createSequentialGroup()
                                                    .addComponent(num_label)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(numHist_text, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(historia_panelLayout.createSequentialGroup()
                                                    .addComponent(direccion_label)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(dir_text, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)
                                        .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(historia_panelLayout.createSequentialGroup()
                                                .addComponent(telPaciente_label)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tel_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(historia_panelLayout.createSequentialGroup()
                                                .addComponent(segSS_label)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(segSS_text, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(70, 70, 70)
                        .addComponent(back_button1)
                        .addGap(33, 33, 33))
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addComponent(regConsultas_label)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addComponent(registros_scroll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(todo_button, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(historia_panelLayout.createSequentialGroup()
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        historia_panelLayout.setVerticalGroup(
            historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historia_panelLayout.createSequentialGroup()
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historia_panelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(num_label)
                                    .addComponent(segSS_label)
                                    .addComponent(numHist_text)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historia_panelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(segSS_text)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomPaciente_label)
                            .addComponent(nomPaciente_text)))
                    .addComponent(back_button1))
                .addGap(18, 18, 18)
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaNacimiento_label)
                    .addComponent(fecha_naci_text)
                    .addComponent(fecha_aper_label)
                    .addComponent(fecha_aper_text))
                .addGap(18, 18, 18)
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccion_label)
                    .addComponent(telPaciente_label)
                    .addComponent(dir_text)
                    .addComponent(tel_text))
                .addGap(18, 18, 18)
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(act_Eco_label)
                    .addComponent(act_eco_text))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(regConsultas_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(historia_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historia_panelLayout.createSequentialGroup()
                        .addComponent(registros_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historia_panelLayout.createSequentialGroup()
                        .addComponent(todo_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)))
                .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        historia_tabbed.addTab("Historia Cl√≠nica", historia_panel);

        fechaCons_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        fechaCons_label.setText("Fecha de Consulta* ");

        medicoReg_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medicoReg_label.setText("M√©dico*");

        Info_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        Info_label.setText("Informaci√≥n General");

        causas_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        causas_label.setText("Causas");

        cama_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cama_label.setText("Asignaci√≥n de Cama*");

        precio_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        precio_label.setText("Precio*");

        si_button.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        si_button.setText("Si");
        si_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                si_buttonActionPerformed(evt);
            }
        });

        no_button.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        no_button.setText("No");
        no_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_buttonActionPerformed(evt);
            }
        });

        formula_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        formula_label.setText("F√≥rmula");

        causa_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        causa_label.setText("Causa*");

        descripCausa_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descripCausa_label.setText("Descripci√≥n*");

        descripCausa_area.setColumns(20);
        descripCausa_area.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descripCausa_area.setRows(5);
        descripCausa_scroll.setViewportView(descripCausa_area);

        agregarCausa.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        agregarCausa.setForeground(new java.awt.Color(99, 110, 111));
        agregarCausa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/agregar_.png"))); // NOI18N
        agregarCausa.setToolTipText("");
        agregarCausa.setAlignmentY(0.1F);
        agregarCausa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agregarCausa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregarCausa.setFocusable(false);
        agregarCausa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregarCausa.setIconTextGap(5);
        agregarCausa.setMaximumSize(new java.awt.Dimension(129, 129));
        agregarCausa.setMinimumSize(new java.awt.Dimension(129, 129));
        agregarCausa.setName("doctor_button"); // NOI18N
        agregarCausa.setPreferredSize(new java.awt.Dimension(53, 53));
        agregarCausa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregarCausa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agregarCausaMousePressed(evt);
            }
        });
        agregarCausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCausaActionPerformed(evt);
            }
        });

        medicamentos_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medicamentos_label.setText("Medicamento*");

        medicamentos_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medicamentos_box.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medicamentos_boxItemStateChanged(evt);
            }
        });

        guardarRegistro_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardarRegistro_button.setBorderPainted(false);
        guardarRegistro_button.setContentAreaFilled(false);
        guardarRegistro_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarRegistro_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardarRegistro_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardarRegistro_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                guardarRegistro_buttonMousePressed(evt);
            }
        });
        guardarRegistro_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarRegistro_buttonActionPerformed(evt);
            }
        });

        vertical_separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        precio_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        precio_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precio_fieldKeyTyped(evt);
            }
        });

        medicoRegi_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        agregarMedicamento.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        agregarMedicamento.setForeground(new java.awt.Color(99, 110, 111));
        agregarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/agregar_.png"))); // NOI18N
        agregarMedicamento.setToolTipText("");
        agregarMedicamento.setAlignmentY(0.1F);
        agregarMedicamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agregarMedicamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregarMedicamento.setFocusable(false);
        agregarMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregarMedicamento.setIconTextGap(5);
        agregarMedicamento.setMaximumSize(new java.awt.Dimension(129, 129));
        agregarMedicamento.setMinimumSize(new java.awt.Dimension(129, 129));
        agregarMedicamento.setName("doctor_button"); // NOI18N
        agregarMedicamento.setPreferredSize(new java.awt.Dimension(53, 53));
        agregarMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregarMedicamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agregarMedicamentoMousePressed(evt);
            }
        });
        agregarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarMedicamentoActionPerformed(evt);
            }
        });

        codCama_label.setText("Cod");

        limpiarcausas.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        limpiarcausas.setForeground(new java.awt.Color(99, 110, 111));
        limpiarcausas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clearhabi_.png"))); // NOI18N
        limpiarcausas.setToolTipText("");
        limpiarcausas.setAlignmentY(0.1F);
        limpiarcausas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        limpiarcausas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiarcausas.setFocusable(false);
        limpiarcausas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limpiarcausas.setIconTextGap(5);
        limpiarcausas.setMaximumSize(new java.awt.Dimension(129, 129));
        limpiarcausas.setMinimumSize(new java.awt.Dimension(129, 129));
        limpiarcausas.setName("doctor_button"); // NOI18N
        limpiarcausas.setPreferredSize(new java.awt.Dimension(53, 53));
        limpiarcausas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limpiarcausas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                limpiarcausasMousePressed(evt);
            }
        });
        limpiarcausas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarcausasActionPerformed(evt);
            }
        });

        limpiarformula.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        limpiarformula.setForeground(new java.awt.Color(99, 110, 111));
        limpiarformula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clearhabi_.png"))); // NOI18N
        limpiarformula.setToolTipText("");
        limpiarformula.setAlignmentY(0.1F);
        limpiarformula.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        limpiarformula.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiarformula.setFocusable(false);
        limpiarformula.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limpiarformula.setIconTextGap(5);
        limpiarformula.setMaximumSize(new java.awt.Dimension(129, 129));
        limpiarformula.setMinimumSize(new java.awt.Dimension(129, 129));
        limpiarformula.setName("doctor_button"); // NOI18N
        limpiarformula.setPreferredSize(new java.awt.Dimension(53, 53));
        limpiarformula.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limpiarformula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                limpiarformulaMousePressed(evt);
            }
        });
        limpiarformula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarformulaActionPerformed(evt);
            }
        });

        causas_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Causa", "Descripci√≥n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(causas_tabla);

        fechaCons_label1.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        fechaCons_label1.setText("* Campos Obligatorios ");

        medicam_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicamento", "D√≥sis"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(medicam_tabla);

        cod_reg_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cod_reg_label.setText("Cod Registro*");

        cod_reg_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cod_reg_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cod_reg_fieldKeyTyped(evt);
            }
        });

        dosis_area.setColumns(20);
        dosis_area.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        dosis_area.setRows(5);
        descripCausa_scroll1.setViewportView(dosis_area);

        descripCausa_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descripCausa_label1.setText("D√≥sis");

        javax.swing.GroupLayout agregarRegistro_panelLayout = new javax.swing.GroupLayout(agregarRegistro_panel);
        agregarRegistro_panel.setLayout(agregarRegistro_panelLayout);
        agregarRegistro_panelLayout.setHorizontalGroup(
            agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                        .addComponent(fechaCons_label)
                                        .addGap(18, 18, 18)
                                        .addComponent(fechaRegis, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(descripCausa_label)
                                            .addComponent(causa_label))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(descripCausa_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(causa_field, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(limpiarcausas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(agregarCausa, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addGap(68, 68, 68)
                                        .addComponent(vertical_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                        .addComponent(cama_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(si_button)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(no_button)
                                        .addGap(18, 18, 18)
                                        .addComponent(codCama_label)
                                        .addGap(2, 2, 2)
                                        .addComponent(numCama_box, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(causas_label)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarRegistro_panelLayout.createSequentialGroup()
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(medicoRegi_box, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, agregarRegistro_panelLayout.createSequentialGroup()
                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fechaCons_label1)
                                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                                .addComponent(medicoReg_label)
                                                .addGap(257, 257, 257)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, agregarRegistro_panelLayout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(cod_reg_label)
                                        .addGap(3, 3, 3)
                                        .addComponent(cod_reg_field, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(precio_label)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precio_field, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(guardarRegistro_button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(formula_label))
                                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(descripCausa_label1)
                                                    .addComponent(medicamentos_label))
                                                .addGap(2, 2, 2)
                                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(medicamentos_box, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                                        .addComponent(descripCausa_scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(agregarMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(limpiarformula, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                        .addComponent(Info_label)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addComponent(horiz_separator)
        );
        agregarRegistro_panelLayout.setVerticalGroup(
            agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guardarRegistro_button, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                        .addComponent(fechaCons_label1)
                        .addGap(2, 2, 2)
                        .addComponent(Info_label)
                        .addGap(18, 18, 18)
                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fechaCons_label)
                            .addComponent(fechaRegis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(medicoReg_label)
                                .addComponent(medicoRegi_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cama_label)
                            .addComponent(si_button)
                            .addComponent(no_button)
                            .addComponent(numCama_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codCama_label)
                            .addComponent(precio_label)
                            .addComponent(precio_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cod_reg_label)
                            .addComponent(cod_reg_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(horiz_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(causas_label)
                                    .addComponent(formula_label))
                                .addGap(7, 7, 7)
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(causa_label)
                                    .addComponent(medicamentos_label)
                                    .addComponent(causa_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(medicamentos_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripCausa_label)
                                    .addComponent(descripCausa_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarRegistro_panelLayout.createSequentialGroup()
                                        .addComponent(agregarCausa, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(limpiarcausas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(agregarRegistro_panelLayout.createSequentialGroup()
                                    .addGap(61, 61, 61)
                                    .addGroup(agregarRegistro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(descripCausa_scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(descripCausa_label1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(vertical_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, agregarRegistro_panelLayout.createSequentialGroup()
                                    .addGap(67, 67, 67)
                                    .addComponent(agregarMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(limpiarformula, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        historia_tabbed.addTab("Agregar Registros", agregarRegistro_panel);

        getContentPane().add(historia_tabbed, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 990, 600));

        pacientes_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        personal_info_label4.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        personal_info_label4.setText("Informaci√≥n Personal");

        id_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        id_label.setText("Id");

        name_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        name_label.setText("Nombre");

        name_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_fieldname_fieldActionPerformed(evt);
            }
        });

        dir_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        dir_label.setText("Direcci√≥n");

        dir_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dir_fielddir_fieldActionPerformed(evt);
            }
        });

        tel_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        tel_label.setText("Tel√©fono");

        aditional_info_label3.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        aditional_info_label3.setText("Informaci√≥n Adicional");

        num_ss_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        num_ss_label.setText("Num. Seguridad Social");

        num_ss_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                num_ss_fieldKeyTyped(evt);
            }
        });

        nacimiento_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        nacimiento_label.setText("Fecha de Nacimiento");

        acti_econ_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        acti_econ_label.setText("Actividad Econ√≥mica");

        guardar_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardar_button.setBorderPainted(false);
        guardar_button.setContentAreaFilled(false);
        guardar_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardar_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_buttonActionPerformed(evt);
            }
        });

        actualizar_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/update_.png"))); // NOI18N
        actualizar_button.setContentAreaFilled(false);
        actualizar_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizar_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updatepressed_.png"))); // NOI18N
        actualizar_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updateselected_.png"))); // NOI18N
        actualizar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizar_buttonActionPerformed(evt);
            }
        });

        back_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button.setBorderPainted(false);
        back_button.setContentAreaFilled(false);
        back_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button.setFocusable(false);
        back_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_buttonMousePressed(evt);
            }
        });

        pacientes_toolbar.setBackground(new java.awt.Color(132, 182, 188));
        pacientes_toolbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pacientes_toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pacientes_toolbar.setRollover(true);
        pacientes_toolbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pacientes_toolbarpacientes_toolbarMousePressed(evt);
            }
        });

        search_button4.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button4.setForeground(new java.awt.Color(99, 110, 111));
        search_button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/search_.png"))); // NOI18N
        search_button4.setToolTipText("");
        search_button4.setAlignmentY(0.1F);
        search_button4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button4.setIconTextGap(5);
        search_button4.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button4.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button4.setName("doctor_button"); // NOI18N
        search_button4.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button4search_buttonMousePressed(evt);
            }
        });
        search_button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button4search_buttonActionPerformed(evt);
            }
        });
        pacientes_toolbar.add(search_button4);

        delete_button4.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        delete_button4.setForeground(new java.awt.Color(99, 110, 111));
        delete_button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/delete_.png"))); // NOI18N
        delete_button4.setToolTipText("");
        delete_button4.setAlignmentY(0.1F);
        delete_button4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_button4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button4.setFocusable(false);
        delete_button4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete_button4.setIconTextGap(5);
        delete_button4.setMaximumSize(new java.awt.Dimension(129, 129));
        delete_button4.setMinimumSize(new java.awt.Dimension(129, 129));
        delete_button4.setName("doctor_button"); // NOI18N
        delete_button4.setPreferredSize(new java.awt.Dimension(129, 53));
        delete_button4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        delete_button4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delete_button4delete_buttonMousePressed(evt);
            }
        });
        delete_button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button4delete_buttonActionPerformed(evt);
            }
        });
        pacientes_toolbar.add(delete_button4);

        clear_button4.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button4.setForeground(new java.awt.Color(99, 110, 111));
        clear_button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button4.setToolTipText("");
        clear_button4.setAlignmentY(0.1F);
        clear_button4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button4.setFocusable(false);
        clear_button4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button4.setIconTextGap(5);
        clear_button4.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button4.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button4.setName("doctor_button"); // NOI18N
        clear_button4.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button4clear_buttonMousePressed(evt);
            }
        });
        clear_button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button4clear_buttonActionPerformed(evt);
            }
        });
        pacientes_toolbar.add(clear_button4);

        pacientes_table.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        pacientes_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Direcci√≥n", "Tel√©fono", "Num. Seg Social", "Fecha Nacimiento", "Act. Econ√≥mica"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        registroPacientes_scrollPane1.setViewportView(pacientes_table);

        registers_label4.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_label4.setText("Registros");

        javax.swing.GroupLayout pacientes_panelLayout = new javax.swing.GroupLayout(pacientes_panel);
        pacientes_panel.setLayout(pacientes_panelLayout);
        pacientes_panelLayout.setHorizontalGroup(
            pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pacientes_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pacientes_panelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name_label)
                                    .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(id_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dir_label))
                                    .addComponent(tel_label))
                                .addGap(18, 18, 18)
                                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name_field)
                                    .addComponent(dir_field, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tel_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(personal_info_label4)
                            .addComponent(registers_label4))
                        .addGap(18, 18, 18)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pacientes_panelLayout.createSequentialGroup()
                                .addGap(269, 269, 269)
                                .addComponent(guardar_button)
                                .addGap(18, 18, 18)
                                .addComponent(actualizar_button, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120))
                            .addGroup(pacientes_panelLayout.createSequentialGroup()
                                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pacientes_panelLayout.createSequentialGroup()
                                                .addComponent(num_ss_label)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(pacientes_panelLayout.createSequentialGroup()
                                                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(nacimiento_label, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(acti_econ_label, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(22, 22, 22)))
                                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fecha_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(num_ss_field, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(activ_Econ_field, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(aditional_info_label3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(back_button))))
                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                        .addComponent(registroPacientes_scrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacientes_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addContainerGap())
        );
        pacientes_panelLayout.setVerticalGroup(
            pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pacientes_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                        .addComponent(personal_info_label4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dir_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dir_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tel_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tel_field))
                        .addGap(18, 18, 18)
                        .addComponent(registers_label4)
                        .addGap(24, 24, 24))
                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pacientes_panelLayout.createSequentialGroup()
                                .addComponent(aditional_info_label3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(num_ss_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(num_ss_label)))
                            .addComponent(back_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fecha_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nacimiento_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acti_econ_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activ_Econ_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualizar_button)
                            .addComponent(guardar_button))))
                .addGroup(pacientes_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pacientes_panelLayout.createSequentialGroup()
                        .addComponent(registroPacientes_scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pacientes_panelLayout.createSequentialGroup()
                        .addComponent(pacientes_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
        );

        getContentPane().add(pacientes_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 990, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pacientes_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pacientes_buttonMousePressed
        historia_tabbed.setVisible(false);
        facturacion_panel.setVisible(false);
        pacientes_panel.setVisible(true);
    }//GEN-LAST:event_pacientes_buttonMousePressed

    private void pacientes_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacientes_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pacientes_buttonActionPerformed

    private void histoClinica_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_histoClinica_buttonMousePressed
        si_button.setSelected(true);
        int mipaciente = Integer.parseInt(JOptionPane.showInputDialog("Id del Paciente"));
        Paciente paciente = new Paciente();
        paciente = paciente_control.consultarPaciente(mipaciente);
        agregarMedicamento.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) registros_table.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        if(paciente != null){
            paciente_historia = mipaciente;
            pacientes_panel.setVisible(false);
            facturacion_panel.setVisible(false);
            historia_tabbed.setVisible(true);
            Persona persona = new Persona();
            Historia_Clinica historia = new Historia_Clinica();
            Vector <Registro_Consulta> registros = new Vector <Registro_Consulta>();
            
            persona = persona_control.consultarPersona(paciente_historia);
            historia = historia_control.consultarHistoria(paciente_historia);
            registros = registro_control.listarRegistros(historia_control.consultarHistoria(paciente_historia).getSerial());
            
            numHist_text.setText(String.valueOf(historia.getSerial()));
            nomPaciente_text.setText(persona.getNombre());
            fecha_naci_text.setText(paciente.getFechaNacimiento());
            dir_text.setText(persona.getDireccion());
            tel_text.setText(persona.getTelefono());
            act_eco_text.setText(paciente.getActivEconomica());
            segSS_text.setText(paciente.getNumSegSocial());
            fecha_aper_text.setText(historia.getFechaApertura());
           
            if(!registros.isEmpty()){
                for(int i=0; i<registros.size(); i++){
                    int cod = registros.get(i).getCodConsulta();
                    String medico = persona_control.consultarPersona(registros.get(i).getMedico()).getNombre();
                    String fecha = registros.get(i).getFechaConsulta();
                    int formula = registros.get(i).getCodFormulaConsulta();
                    int precio = registros.get(i).getPrecioConsulta();
                    model.addRow(new Object[]{cod, medico, fecha, formula, precio});
                }
            }else
                JOptionPane.showMessageDialog(null, "El Paciente no tiene registros todav√≠a.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
         
        }else
            JOptionPane.showMessageDialog(null, "El paciente con Id: "+mipaciente+" no se encuentra en la Base de Datos.", "ERROR!", JOptionPane.ERROR_MESSAGE);        
        pacientes_panel.setVisible(false);
        facturacion_panel.setVisible(false);
        historia_tabbed.setVisible(true);
    }//GEN-LAST:event_histoClinica_buttonMousePressed

    private void histoClinica_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histoClinica_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_histoClinica_buttonActionPerformed

    private void facturacion_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facturacion_buttonMousePressed
        pacientes_panel.setVisible(false);
        historia_tabbed.setVisible(false);
        facturacion_panel.setVisible(true);
    }//GEN-LAST:event_facturacion_buttonMousePressed

    private void name_fieldname_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_fieldname_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_fieldname_fieldActionPerformed

    private void dir_fielddir_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dir_fielddir_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dir_fielddir_fieldActionPerformed

    private void search_button4search_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button4search_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) pacientes_table.getModel();
        int rows = model.getRowCount();
        for (int i = 0; i < rows; i++) {
        model.removeRow(i);
        }
        Paciente paciente;
        Persona persona;
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Inserte Id del Paciente", ""));
        paciente = paciente_control.consultarPaciente(id);
        persona = persona_control.consultarPersona(id);
        if(paciente != null && persona != null){
            model.addRow(new Object[]{persona.getId(), persona.getNombre(), persona.getDireccion(),persona.getTelefono(), paciente.getNumSegSocial(), paciente.getFechaNacimiento(), paciente.getActivEconomica()});  
        }
        else
            JOptionPane.showMessageDialog(null, "Error. \n Verifique el n√∫mero de Identidad del Paciente.");
    }//GEN-LAST:event_search_button4search_buttonMousePressed

    private void search_button4search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button4search_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button4search_buttonActionPerformed

    private void delete_button4delete_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_button4delete_buttonMousePressed
        int numRows = pacientes_table.getSelectedRows().length;       
        if(JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que desea eliminar "+numRows+" registros?", "ALERTA!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            DefaultTableModel model = (DefaultTableModel) pacientes_table.getModel();
            for(int i=0; i<numRows ; i++ ) {
                int row = pacientes_table.getSelectedRow();
                int id = Integer.parseInt(model.getValueAt(row, 0).toString());
                int serial = historia_control.consultarHistoria(id).getSerial();
                registro_control.eliminarRegistros(serial);                
                historia_control.eliminarHistoria(id);
                paciente_control.eliminarPaciente(id);
                persona_control.eliminarPersona(id);
                model.removeRow(pacientes_table.getSelectedRow());
            }
            JOptionPane.showMessageDialog(null, "Registros Eliminados.");
        }
    }//GEN-LAST:event_delete_button4delete_buttonMousePressed

    private void delete_button4delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button4delete_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_button4delete_buttonActionPerformed

    private void clear_button4clear_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button4clear_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) pacientes_table.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button4clear_buttonMousePressed

    private void clear_button4clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button4clear_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button4clear_buttonActionPerformed

    private void pacientes_toolbarpacientes_toolbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pacientes_toolbarpacientes_toolbarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_pacientes_toolbarpacientes_toolbarMousePressed

    private void todo_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todo_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_todo_buttonActionPerformed

    private void todo_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todo_buttonMousePressed
        Vector<Registro_Consulta> registros = new Vector<Registro_Consulta>();
        DefaultTableModel model = (DefaultTableModel) registros_table.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        registros = registro_control.listarRegistros(historia_control.consultarHistoria(paciente_historia).getSerial());
           
        if(!registros.isEmpty()){
            for(int i=0; i<registros.size(); i++){
                int cod = registros.get(i).getCodConsulta();
                String medico = persona_control.consultarPersona(registros.get(i).getMedico()).getNombre();
                String fecha = registros.get(i).getFechaConsulta();
                int formula = registros.get(i).getCodFormulaConsulta();
                int precio = registros.get(i).getPrecioConsulta();
                model.addRow(new Object[]{cod, medico, fecha, formula, precio});
            }
        }else
            JOptionPane.showMessageDialog(null, "El Paciente no tiene registros todav√≠a.", "ALERTA!", JOptionPane.WARNING_MESSAGE);    
    }//GEN-LAST:event_todo_buttonMousePressed

    private void toolbar_users_areas1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas1MousePressed

    private void filter_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_button1ActionPerformed

    private void filter_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button1MousePressed
        DefaultTableModel model = (DefaultTableModel) registros_table.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Vector<Registro_Consulta> registros = new Vector<Registro_Consulta>();
        JDateChooser inicio = new JDateChooser();
        JDateChooser fin = new JDateChooser();
        Object[] params = {"Seleccione un rango:\nDesde:\n",inicio,"\nHasta:\n",fin};   
        if(JOptionPane.showConfirmDialog(null,params,"FILTRAR", JOptionPane.PLAIN_MESSAGE)==JOptionPane.OK_OPTION){
            String fecha1 = sdf.format(((JDateChooser)params[1]).getDate());
            String fecha2 = sdf.format(((JDateChooser)params[3]).getDate());            
            registros = registro_control.filtrarRegistros(historia_control.consultarHistoria(paciente_historia).getSerial(),fecha1, fecha2);
            if(!registros.isEmpty()){
                for(int i=0; i<registros.size(); i++){
                    int cod = registros.get(i).getCodConsulta();
                    String medico = persona_control.consultarPersona(registros.get(i).getMedico()).getNombre();
                    String fecha = registros.get(i).getFechaConsulta();
                    int formula = registros.get(i).getCodFormulaConsulta();
                    int precio = registros.get(i).getPrecioConsulta();
                    model.addRow(new Object[]{cod, medico, fecha, formula, precio});
                }
            }else
                JOptionPane.showMessageDialog(null, "No existen Registros en ese rango de Fechas.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_filter_button1MousePressed

    private void ver_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ver_buttonActionPerformed

    private void ver_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ver_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) registros_table.getModel();
        int row = registros_table.getSelectedRow();
        if(row != -1){
            int cod = Integer.parseInt(model.getValueAt(row, 0).toString());
            String fecha = model.getValueAt(row, 2).toString();
            VerRegistro registro = new VerRegistro();
            registro.setMihistoria(historia_control.consultarHistoria(paciente_historia).getSerial());
            registro.setMipaciente(paciente_historia);
            registro.setMiregistro(cod);
            registro.llenarRegistro();
        }
        else
            JOptionPane.showMessageDialog(null, "Seleccione un Registro v√°lido para consultarlo completamente.", "ALERTA!", JOptionPane.WARNING_MESSAGE);        
    }//GEN-LAST:event_ver_buttonMousePressed

    private void agregarCausaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarCausaMousePressed
        DefaultTableModel model = (DefaultTableModel) causas_tabla.getModel();
        var1 = causa_field.getText();
        var2 = descripCausa_area.getText();
        if(!var1.isEmpty() && !var2.isEmpty()){
            model.addRow(new Object[]{var1, var2});
        }else
            JOptionPane.showMessageDialog(null, "La Causa debe tener un nombre y una descripci√≥n.");
    }//GEN-LAST:event_agregarCausaMousePressed

    private void agregarCausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCausaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregarCausaActionPerformed

    private void agregarMedicamentoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarMedicamentoMousePressed
        DefaultTableModel model = (DefaultTableModel) medicam_tabla.getModel();
        medicam_tabla.setModel(model);
        var1 = medicamentos_box.getSelectedItem().toString();
        var2 = dosis_area.getText();
        if(!var1.isEmpty() && !var2.isEmpty()){
            model.addRow(new Object[]{var1, var2});
        }else
            JOptionPane.showMessageDialog(null, "El medicamento debe tener d√≥sis.");
    }//GEN-LAST:event_agregarMedicamentoMousePressed

    private void agregarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarMedicamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregarMedicamentoActionPerformed

    private void guardar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_buttonActionPerformed
        var1 = id_field.getText();
        var2 = name_field.getText();
        var3 = dir_field.getText();
        var4 = tel_field.getText();
        var5 = num_ss_field.getText();
        var6 = fecha_chooser.getDate().toString();
        var7 = activ_Econ_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty() && !var7.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String numSS = var5;
            String nacim = sdf.format(fecha_chooser.getDate());
            String act = var7;            
          
            boolean flag = true;
            int numFilas = persona_control.insertarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = paciente_control.insertarPaciente(id, numSS, nacim, act);
                if (numFilas == 1){
                    Date hoy = new Date();
                    String fechaHoy = sdf.format(hoy);
                    historia_control.insertarHistoria(id, fechaHoy); //crea la historia cl√≠nica
                }else
                    flag = false;
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "Paciente registrado/a exit√≥samente");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al registrar al Paciente. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_guardar_buttonActionPerformed

    private void actualizar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizar_buttonActionPerformed
        var1 = id_field.getText();
        var2 = name_field.getText();
        var3 = dir_field.getText();
        var4 = tel_field.getText();
        var5 = num_ss_field.getText();
        var6 = fecha_chooser.getDate().toString();
        var7 = activ_Econ_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty() && !var7.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String numSS = var5;
            String nacim = sdf.format(fecha_chooser.getDate());
            String act = var7;            
          
            boolean flag = true;
            int numFilas = persona_control.modificarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = paciente_control.modificarPaciente(id, numSS, nacim, act);
                if (numFilas != 1)
                    flag = false;       
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "Paciente modificado/a exit√≥samente");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al modificar al Paciente. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_actualizar_buttonActionPerformed

    private void back_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMousePressed
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_buttonMousePressed

    private void limpiarcausasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarcausasMousePressed
        DefaultTableModel model = (DefaultTableModel) causas_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_limpiarcausasMousePressed

    private void limpiarcausasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarcausasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarcausasActionPerformed

    private void limpiarformulaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarformulaMousePressed
        DefaultTableModel model = (DefaultTableModel) medicam_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }     
    }//GEN-LAST:event_limpiarformulaMousePressed

    private void limpiarformulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarformulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarformulaActionPerformed

    private void guardarRegistro_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarRegistro_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarRegistro_buttonActionPerformed

    private void guardarRegistro_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarRegistro_buttonMousePressed
        Date fechaSelec = new Date();
        fechaSelec = fechaRegis.getDate();
        var1 = sdf.format(fechaSelec);        
        var2 = medicoRegi_box.getSelectedItem().toString();
        var3 = precio_field.getText();
        var4 = cod_reg_field.getText();
        DefaultTableModel model1 = (DefaultTableModel) causas_tabla.getModel();
        DefaultTableModel model2 = (DefaultTableModel) medicam_tabla.getModel();
        int filasCausas= causas_tabla.getModel().getRowCount();  
        int filasMedic = medicam_tabla.getModel().getRowCount();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && filasCausas>0){
            int serial = historia_control.consultarHistoria(paciente_historia).getSerial();
            int cod_reg = Integer.parseInt(var4);
            Formula formula = new Formula();
            int codFormula = 0;
            int precio = Integer.parseInt(var3);
            int numFilas = 0;
            //llenar registro_consulta
            String fecha = var1;
            int idMedico = persona_control.idMedico(var2);
            if(si_button.isSelected()){
                int codCama = Integer.parseInt(numCama_box.getSelectedItem().toString());
                asignaCama_control.insertarAsignacion(paciente_historia,codCama,fecha); //inserta asignacion SIN fecha de salida
            }
            if(filasMedic>0){
                formula_control.insertarFormula(idMedico); //inserta a tabla formula con COD serial -> Retorna el COD
                codFormula = formula_control.consultarCodFormula();
                for(int i=0;i<filasMedic;i++){
                    int codMed = medicamento_control.consultarxNombre(model2.getValueAt(i, 0).toString());
                    String dosis = model2.getValueAt(i, 1).toString();
                    formulacion_control.insertarFormulacion(codFormula, codMed, dosis);
                }
            numFilas = registro_control.insertarRegistro(cod_reg, serial, fecha, idMedico, codFormula, precio);
            }
            else if(filasMedic==0)
                numFilas = registro_control.insertarRegistroNOFormula(cod_reg, serial, fecha, idMedico, precio);
            
            for(int i=0;i<filasCausas;i++){
                String nom = model1.getValueAt(i, 0).toString();
                String descrip = model1.getValueAt(i, 1).toString();
                int cod = causa_control.validarCausa(nom);//retorna el cod de causa
                if(cod==0){
                    causa_control.insertarCausa(nom, descrip);
                    cod = causa_control.validarCausa(nom);
                }
                causaConsulta_control.insertarCausaConsulta(cod, serial, cod_reg);
            }
            if(numFilas==1)
                JOptionPane.showMessageDialog(null, "Consulta registrado/a exit√≥samente");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al registrar la Consulta. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Llenar todos los campos obligatorios (*).");
    }//GEN-LAST:event_guardarRegistro_buttonMousePressed

    private void no_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_buttonActionPerformed
        numCama_box.setEnabled(false);
    }//GEN-LAST:event_no_buttonActionPerformed

    private void back_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button1MousePressed
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_button1MousePressed

    private void si_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_si_buttonActionPerformed
        numCama_box.setEnabled(true);
    }//GEN-LAST:event_si_buttonActionPerformed

    private void medicamentos_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medicamentos_boxItemStateChanged
        if(medicamentos_box.getSelectedItem().toString() == "Ninguno"){
            agregarMedicamento.setEnabled(false);
        }
        else
           agregarMedicamento.setEnabled(true);
    }//GEN-LAST:event_medicamentos_boxItemStateChanged

    private void back_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button2MousePressed
        // TODO add your handling code here:
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_button2MousePressed

    private void search_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button3MousePressed
        int y = year.getYear();

        String promedioConsultas = String.valueOf(paciente_control.promedioConsultas(y,0));
        String promedioMedicamentos = String.valueOf(paciente_control.promedioMedicamentos(y,0));

        costo1.setText(promedioConsultas);
        costo2.setText(promedioMedicamentos);
    }//GEN-LAST:event_search_button3MousePressed

    private void toolbar_users_areas2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas2MousePressed

    private void clear_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button1MousePressed
        costo1.setText("0");
        costo2.setText("0");
    }//GEN-LAST:event_clear_button1MousePressed

    private void filter_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button2MousePressed
        JMonthChooser mes = new JMonthChooser();
        Object[] params = {"Seleccione un mes:\nMes:\n",mes};
        if(JOptionPane.showConfirmDialog(null,params,"FILTRAR", JOptionPane.PLAIN_MESSAGE)==JOptionPane.OK_OPTION){
            int y = year.getYear();
            int m = mes.getMonth();
            String promedioConsultas = String.valueOf(paciente_control.promedioConsultas(y,m));
            String promedioMedicamentos = String.valueOf(paciente_control.promedioMedicamentos(y,m));

            costo1.setText(promedioConsultas);
            costo2.setText(promedioMedicamentos);
        }
    }//GEN-LAST:event_filter_button2MousePressed

    private void cod_reg_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cod_reg_fieldKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_cod_reg_fieldKeyTyped

    private void precio_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio_fieldKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_precio_fieldKeyTyped

    private void num_ss_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_num_ss_fieldKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_num_ss_fieldKeyTyped

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Info_label;
    private javax.swing.JLabel act_Eco_label;
    private javax.swing.JLabel act_eco_text;
    private javax.swing.JLabel acti_econ_label;
    private javax.swing.JTextField activ_Econ_field;
    private javax.swing.JButton actualizar_button;
    private javax.swing.JLabel aditional_info_label3;
    private javax.swing.JLabel agenda_label;
    private javax.swing.JLabel agenda_label1;
    private javax.swing.JLabel agenda_label2;
    private javax.swing.JLabel agenda_label4;
    private javax.swing.JLabel agenda_label5;
    private javax.swing.JLabel agendamensual_label;
    private javax.swing.JButton agregarCausa;
    private javax.swing.JButton agregarMedicamento;
    private javax.swing.JPanel agregarRegistro_panel;
    private javax.swing.ButtonGroup asigCama_group;
    private javax.swing.JButton back_button;
    private javax.swing.JButton back_button1;
    private javax.swing.JButton back_button2;
    private javax.swing.JLabel cama_label;
    private javax.swing.JTextField causa_field;
    private javax.swing.JLabel causa_label;
    private javax.swing.JLabel causas_label;
    private javax.swing.JTable causas_tabla;
    private javax.swing.JButton clear_button1;
    private javax.swing.JButton clear_button4;
    private javax.swing.JLabel codCama_label;
    private javax.swing.JTextField cod_reg_field;
    private javax.swing.JLabel cod_reg_label;
    private javax.swing.JLabel costo1;
    private javax.swing.JLabel costo2;
    private javax.swing.JButton delete_button4;
    private javax.swing.JTextArea descripCausa_area;
    private javax.swing.JLabel descripCausa_label;
    private javax.swing.JLabel descripCausa_label1;
    private javax.swing.JScrollPane descripCausa_scroll;
    private javax.swing.JScrollPane descripCausa_scroll1;
    private javax.swing.JTextField dir_field;
    private javax.swing.JLabel dir_label;
    private javax.swing.JLabel dir_text;
    private javax.swing.JLabel direccion_label;
    private javax.swing.JTextArea dosis_area;
    private javax.swing.JButton facturacion_button;
    private javax.swing.JPanel facturacion_panel;
    private javax.swing.JLabel fechaCons_label;
    private javax.swing.JLabel fechaCons_label1;
    private javax.swing.JLabel fechaNacimiento_label;
    private com.toedter.calendar.JDateChooser fechaRegis;
    private javax.swing.JLabel fecha_aper_label;
    private javax.swing.JLabel fecha_aper_text;
    private com.toedter.calendar.JDateChooser fecha_chooser;
    private javax.swing.JLabel fecha_naci_text;
    private javax.swing.JButton filter_button1;
    private javax.swing.JButton filter_button2;
    private javax.swing.JLabel formula_label;
    private javax.swing.JButton guardarRegistro_button;
    private javax.swing.JButton guardar_button;
    private javax.swing.JButton histoClinica_button;
    private javax.swing.JPanel historia_panel;
    private javax.swing.JTabbedPane historia_tabbed;
    private javax.swing.JSeparator horiz_separator;
    private javax.swing.JSeparator horiz_separator1;
    private javax.swing.JTextField id_field;
    private javax.swing.JLabel id_label;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton limpiarcausas;
    private javax.swing.JButton limpiarformula;
    private javax.swing.JTable medicam_tabla;
    private javax.swing.JComboBox<String> medicamentos_box;
    private javax.swing.JLabel medicamentos_label;
    private javax.swing.JLabel medicoReg_label;
    private javax.swing.JComboBox<String> medicoRegi_box;
    private javax.swing.JLabel nacimiento_label;
    private javax.swing.JTextField name_field;
    private javax.swing.JLabel name_label;
    private javax.swing.JRadioButton no_button;
    private javax.swing.JLabel nomPaciente_label;
    private javax.swing.JLabel nomPaciente_text;
    private javax.swing.JComboBox<String> numCama_box;
    private javax.swing.JLabel numCitas_text1;
    private javax.swing.JLabel numHist_text;
    private javax.swing.JLabel num_label;
    private javax.swing.JTextField num_ss_field;
    private javax.swing.JLabel num_ss_label;
    private javax.swing.JToolBar opciones_agendar_toolbar;
    private javax.swing.JPanel opciones_panel;
    private javax.swing.JButton pacientes_button;
    private javax.swing.JPanel pacientes_panel;
    private javax.swing.JTable pacientes_table;
    private javax.swing.JToolBar pacientes_toolbar;
    private javax.swing.JLabel personal_info_label4;
    private javax.swing.JTextField precio_field;
    private javax.swing.JLabel precio_label;
    private javax.swing.JLabel regConsultas_label;
    private javax.swing.JLabel registers_label4;
    private javax.swing.JScrollPane registroPacientes_scrollPane1;
    private javax.swing.JScrollPane registros_scroll;
    private javax.swing.JTable registros_table;
    private javax.swing.JButton search_button3;
    private javax.swing.JButton search_button4;
    private javax.swing.JLabel segSS_label;
    private javax.swing.JLabel segSS_text;
    private javax.swing.JRadioButton si_button;
    private javax.swing.JLabel telPaciente_label;
    private javax.swing.JTextField tel_field;
    private javax.swing.JLabel tel_label;
    private javax.swing.JLabel tel_text;
    private javax.swing.JButton todo_button;
    private javax.swing.JToolBar toolbar_users_areas1;
    private javax.swing.JToolBar toolbar_users_areas2;
    private javax.swing.JButton ver_button;
    private javax.swing.JSeparator vert_separator1;
    private javax.swing.JSeparator vertical_separator;
    private com.toedter.calendar.JYearChooser year;
    // End of variables declaration//GEN-END:variables
}
