/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import javax.swing.JOptionPane;
import Controlador.*;
import Logica.*;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;

/**
 *
 * @author ennuikibun
 */
public class AdminUsuarios extends javax.swing.JFrame {
    
    Vista_Control vista_control;
    Area_Control area_control;
    Cama_Control cama_control;
    Persona_Control persona_control;
    Empleado_Control empleado_control;
    Enfermera_Control enfermera_control;
    Habilidad_Control habilidades_enfermera_control;
    Medico_Control medico_control;
    String var1,var2,var3,var4,var5,var6,var7,var8,var9,var10,var11, var12;
    Vector <String> tempHabil;
    
    public AdminUsuarios(Vista_Control vista) {
        super("Cl√≠nica X || Administrador");
        initComponents();
        estadoCama_group.add(usada_radio);
        estadoCama_group.add(libre_radio);
        
        
        
	setLocationRelativeTo(null);
	setSize(860,650);
	setResizable(false);
        
        vista_control = vista;
        area_control = new Area_Control();
        cama_control = new Cama_Control();
        persona_control = new Persona_Control();
        empleado_control = new Empleado_Control();
        enfermera_control = new Enfermera_Control();
        habilidades_enfermera_control = new Habilidad_Control();
        medico_control = new Medico_Control();
        
        tempHabil = new Vector<String>();
        
        addCombos();
    }
    
    public void addCombos(){
        Vector <Area> areas = new Vector<Area>();
        Vector <Persona> personas = new Vector<Persona>();
        areas = area_control.listarAreas();
        personas = persona_control.listarPersonas();
        for(int i = 0; i < areas.size(); i++){
            String codigo = Integer.toString(areas.get(i).getCodigo());
            String nombre = areas.get(i).getNombre();
            String a = codigo + "-" + nombre;
            areas_box.addItem(a);
            name_area_box1.addItem(a);
            cod_area_box.addItem(a);
        }
        
        for(int i = 0; i < personas.size(); i++){
            String codigo = Integer.toString(personas.get(i).getId());
            String nombre = personas.get(i).getNombre();
            
            String a = codigo + "-" + nombre;
            
            boss_box.addItem(a);
            boss_box1.addItem(a);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        estadoCama_group = new javax.swing.ButtonGroup();
        panel_users = new javax.swing.JPanel();
        users_tabbed = new javax.swing.JTabbedPane();
        register_panel = new javax.swing.JPanel();
        id_label = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        tel_label = new javax.swing.JLabel();
        dir_label = new javax.swing.JLabel();
        mail_label = new javax.swing.JLabel();
        money_label = new javax.swing.JLabel();
        position_label = new javax.swing.JLabel();
        cod_area_label = new javax.swing.JLabel();
        id_field = new javax.swing.JTextField();
        name_field = new javax.swing.JTextField();
        dir_field = new javax.swing.JTextField();
        tel_field = new javax.swing.JTextField();
        mail_field = new javax.swing.JTextField();
        position_field = new javax.swing.JTextField();
        money_field = new javax.swing.JTextField();
        boss_label = new javax.swing.JLabel();
        boss_box = new javax.swing.JComboBox<>();
        special_label = new javax.swing.JLabel();
        licence_label = new javax.swing.JLabel();
        univer_label = new javax.swing.JLabel();
        personal_info_label = new javax.swing.JLabel();
        profesional_info_label = new javax.swing.JLabel();
        aditional_info_label = new javax.swing.JLabel();
        special_field = new javax.swing.JTextField();
        licence_field = new javax.swing.JTextField();
        univers_field = new javax.swing.JTextField();
        cod_area_box = new javax.swing.JComboBox<>();
        toolbar_users_areas1 = new javax.swing.JToolBar();
        search_button = new javax.swing.JButton();
        filter_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        registers_table = new javax.swing.JTable();
        registers_label = new javax.swing.JLabel();
        guardarMedico_button = new javax.swing.JButton();
        actualMedico_button = new javax.swing.JButton();
        back_button3 = new javax.swing.JButton();
        update_panel = new javax.swing.JPanel();
        id_label1 = new javax.swing.JLabel();
        name_label1 = new javax.swing.JLabel();
        tel_label1 = new javax.swing.JLabel();
        dir_label1 = new javax.swing.JLabel();
        mail_label1 = new javax.swing.JLabel();
        money_label1 = new javax.swing.JLabel();
        position_label1 = new javax.swing.JLabel();
        cod_area_label1 = new javax.swing.JLabel();
        id_field1 = new javax.swing.JTextField();
        name_field1 = new javax.swing.JTextField();
        dir_field1 = new javax.swing.JTextField();
        tel_field1 = new javax.swing.JTextField();
        mail_field1 = new javax.swing.JTextField();
        position_field1 = new javax.swing.JTextField();
        money_field1 = new javax.swing.JTextField();
        boss_label1 = new javax.swing.JLabel();
        boss_box1 = new javax.swing.JComboBox<>();
        special_label1 = new javax.swing.JLabel();
        personal_info_label1 = new javax.swing.JLabel();
        profesional_info_label1 = new javax.swing.JLabel();
        aditional_info_label1 = new javax.swing.JLabel();
        exper_field1 = new javax.swing.JTextField();
        name_area_box1 = new javax.swing.JComboBox<>();
        toolbar_users_areas2 = new javax.swing.JToolBar();
        search_button1 = new javax.swing.JButton();
        filter_button1 = new javax.swing.JButton();
        delete_button1 = new javax.swing.JButton();
        clear_button1 = new javax.swing.JButton();
        registers_label1 = new javax.swing.JLabel();
        special_label2 = new javax.swing.JLabel();
        actualEnfermero_button = new javax.swing.JButton();
        guardarEnfermero_button = new javax.swing.JButton();
        back_button4 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        registers_table3 = new javax.swing.JTable();
        agregarhabilidades = new javax.swing.JButton();
        habilidad_field = new javax.swing.JTextField();
        limpiarhabilidades = new javax.swing.JButton();
        area_panel = new javax.swing.JPanel();
        cod_Area_label = new javax.swing.JLabel();
        name_Area_label = new javax.swing.JLabel();
        descrip_label = new javax.swing.JLabel();
        codarea_field = new javax.swing.JTextField();
        namearea_field = new javax.swing.JTextField();
        personal_info_label2 = new javax.swing.JLabel();
        toolbar_users_areas3 = new javax.swing.JToolBar();
        search_button2 = new javax.swing.JButton();
        filter_button2 = new javax.swing.JButton();
        delete_button2 = new javax.swing.JButton();
        clear_button2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        registers_table2 = new javax.swing.JTable();
        registers_label2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        descriparea_field = new javax.swing.JTextArea();
        actualArea_button = new javax.swing.JButton();
        guardarArea_button = new javax.swing.JButton();
        back_button5 = new javax.swing.JButton();
        camas_panel = new javax.swing.JPanel();
        info_label = new javax.swing.JLabel();
        numCama_label = new javax.swing.JLabel();
        descriCama_label = new javax.swing.JLabel();
        AreaCama_label = new javax.swing.JLabel();
        estadoCama_label = new javax.swing.JLabel();
        usada_radio = new javax.swing.JRadioButton();
        libre_radio = new javax.swing.JRadioButton();
        areas_box = new javax.swing.JComboBox<>();
        numCama_field = new javax.swing.JTextField();
        back_button6 = new javax.swing.JButton();
        actualCama_button = new javax.swing.JButton();
        guardarCama_button = new javax.swing.JButton();
        registros_scroll = new javax.swing.JScrollPane();
        registers_table4 = new javax.swing.JTable();
        camas_toolbar = new javax.swing.JToolBar();
        search_button3 = new javax.swing.JButton();
        filter_button3 = new javax.swing.JButton();
        delete_button3 = new javax.swing.JButton();
        clear_button3 = new javax.swing.JButton();
        registers_label3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descripcama_field = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_users.setBackground(new java.awt.Color(116, 165, 170));

        users_tabbed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        users_tabbed.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        users_tabbed.setMaximumSize(new java.awt.Dimension(790, 750));
        users_tabbed.setName(""); // NOI18N
        users_tabbed.setPreferredSize(new java.awt.Dimension(790, 750));
        users_tabbed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                users_tabbedStateChanged(evt);
            }
        });

        register_panel.setPreferredSize(new java.awt.Dimension(738, 366));

        id_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        id_label.setText("Id");

        name_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        name_label.setText("Nombre");

        tel_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        tel_label.setText("Tel√©fono");

        dir_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        dir_label.setText("Direcci√≥n");

        mail_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        mail_label.setText("Email");

        money_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        money_label.setText("Salario");

        position_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        position_label.setText("Cargo");

        cod_area_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cod_area_label.setText("Nom Area");

        name_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_fieldActionPerformed(evt);
            }
        });

        dir_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dir_fieldActionPerformed(evt);
            }
        });

        money_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                money_fieldKeyTyped(evt);
            }
        });

        boss_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        boss_label.setText("Jefe");

        boss_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        special_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        special_label.setText("Especialidad");

        licence_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        licence_label.setText("Num. Licencia");

        univer_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        univer_label.setText("Universidad");

        personal_info_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        personal_info_label.setText("Informaci√≥n Personal");

        profesional_info_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        profesional_info_label.setText("Informaci√≥n Profesional");

        aditional_info_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        aditional_info_label.setText("Informaci√≥n Adicional");

        cod_area_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        toolbar_users_areas1.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        toolbar_users_areas1.setRollover(true);
        toolbar_users_areas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas1MousePressed(evt);
            }
        });

        search_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button.setForeground(new java.awt.Color(99, 110, 111));
        search_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/search_.png"))); // NOI18N
        search_button.setToolTipText("");
        search_button.setAlignmentY(0.1F);
        search_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button.setIconTextGap(5);
        search_button.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button.setName("doctor_button"); // NOI18N
        search_button.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_buttonMousePressed(evt);
            }
        });
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(search_button);

        filter_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button.setForeground(new java.awt.Color(99, 110, 111));
        filter_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button.setToolTipText("");
        filter_button.setAlignmentY(0.1F);
        filter_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button.setFocusable(false);
        filter_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button.setIconTextGap(5);
        filter_button.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button.setName("doctor_button"); // NOI18N
        filter_button.setPreferredSize(new java.awt.Dimension(129, 53));
        filter_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_buttonMousePressed(evt);
            }
        });
        filter_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_buttonActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(filter_button);

        delete_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        delete_button.setForeground(new java.awt.Color(99, 110, 111));
        delete_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/delete_.png"))); // NOI18N
        delete_button.setToolTipText("");
        delete_button.setAlignmentY(0.1F);
        delete_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button.setFocusable(false);
        delete_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete_button.setIconTextGap(5);
        delete_button.setMaximumSize(new java.awt.Dimension(129, 129));
        delete_button.setMinimumSize(new java.awt.Dimension(129, 129));
        delete_button.setName("doctor_button"); // NOI18N
        delete_button.setPreferredSize(new java.awt.Dimension(129, 53));
        delete_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        delete_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delete_buttonMousePressed(evt);
            }
        });
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(delete_button);

        clear_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button.setForeground(new java.awt.Color(99, 110, 111));
        clear_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button.setToolTipText("");
        clear_button.setAlignmentY(0.1F);
        clear_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button.setFocusable(false);
        clear_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button.setIconTextGap(5);
        clear_button.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button.setName("doctor_button"); // NOI18N
        clear_button.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_buttonMousePressed(evt);
            }
        });
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(clear_button);

        registers_table.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        registers_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Direcci√≥n", "Tel√©fono", "Email", "Especialidad", "Licencia", "Universidad", "Cargo", "Salario", "Area", "Jefe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(registers_table);
        if (registers_table.getColumnModel().getColumnCount() > 0) {
            registers_table.getColumnModel().getColumn(5).setHeaderValue("Especialidad");
        }

        registers_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_label.setText("Registros");

        guardarMedico_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardarMedico_button.setBorderPainted(false);
        guardarMedico_button.setContentAreaFilled(false);
        guardarMedico_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarMedico_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardarMedico_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardarMedico_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMedico_buttonActionPerformed(evt);
            }
        });

        actualMedico_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/update_.png"))); // NOI18N
        actualMedico_button.setContentAreaFilled(false);
        actualMedico_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualMedico_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updatepressed_.png"))); // NOI18N
        actualMedico_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updateselected_.png"))); // NOI18N
        actualMedico_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualMedico_buttonActionPerformed(evt);
            }
        });

        back_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button3.setBorderPainted(false);
        back_button3.setContentAreaFilled(false);
        back_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button3.setFocusable(false);
        back_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout register_panelLayout = new javax.swing.GroupLayout(register_panel);
        register_panel.setLayout(register_panelLayout);
        register_panelLayout.setHorizontalGroup(
            register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(register_panelLayout.createSequentialGroup()
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name_label)
                            .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(id_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dir_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(tel_label)
                            .addComponent(mail_label))
                        .addGap(18, 18, 18)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_field)
                            .addComponent(dir_field)
                            .addComponent(mail_field, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(tel_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(register_panelLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(special_label)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, register_panelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(univer_label, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(licence_label))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(special_field, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licence_field, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(univers_field, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(register_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personal_info_label)
                            .addComponent(profesional_info_label))
                        .addGap(195, 195, 195)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(register_panelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(aditional_info_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(register_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, register_panelLayout.createSequentialGroup()
                                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(money_label)
                                            .addComponent(cod_area_label)
                                            .addComponent(position_label)
                                            .addComponent(boss_label))
                                        .addGap(4, 4, 4)
                                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(position_field, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cod_area_box, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(boss_box, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(money_field, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, register_panelLayout.createSequentialGroup()
                                        .addComponent(guardarMedico_button)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(actualMedico_button, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)))))
                        .addComponent(back_button3)
                        .addContainerGap())
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(register_panelLayout.createSequentialGroup()
                                .addComponent(registers_label)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        register_panelLayout.setVerticalGroup(
            register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(register_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(personal_info_label)
                            .addComponent(aditional_info_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(position_label)
                            .addComponent(position_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(back_button3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(money_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(money_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dir_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dir_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod_area_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod_area_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tel_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tel_field)
                    .addComponent(boss_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boss_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mail_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mail_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addComponent(profesional_info_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(special_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(special_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(licence_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licence_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(univer_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(univers_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(register_panelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(guardarMedico_button)
                            .addComponent(actualMedico_button))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addComponent(registers_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(406, Short.MAX_VALUE))
        );

        users_tabbed.addTab("M√©dicos", register_panel);

        id_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        id_label1.setText("Id");

        name_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        name_label1.setText("Nombre");

        tel_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        tel_label1.setText("Tel√©fono");

        dir_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        dir_label1.setText("Direcci√≥n");

        mail_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        mail_label1.setText("Email");

        money_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        money_label1.setText("Salario");

        position_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        position_label1.setText("Cargo");

        cod_area_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cod_area_label1.setText("Nom Area");

        name_field1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_field1ActionPerformed(evt);
            }
        });

        dir_field1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dir_field1ActionPerformed(evt);
            }
        });

        money_field1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                money_field1KeyTyped(evt);
            }
        });

        boss_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        boss_label1.setText("Jefe");

        boss_box1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        special_label1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        special_label1.setText("Experiencia(A√±os)");

        personal_info_label1.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        personal_info_label1.setText("Informaci√≥n Personal");

        profesional_info_label1.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        profesional_info_label1.setText("Informaci√≥n Profesional");

        aditional_info_label1.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        aditional_info_label1.setText("Informaci√≥n Adicional");

        name_area_box1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        name_area_box1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_area_box1ActionPerformed(evt);
            }
        });

        toolbar_users_areas2.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        toolbar_users_areas2.setRollover(true);
        toolbar_users_areas2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas2MousePressed(evt);
            }
        });

        search_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button1.setForeground(new java.awt.Color(99, 110, 111));
        search_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/search_.png"))); // NOI18N
        search_button1.setToolTipText("");
        search_button1.setAlignmentY(0.1F);
        search_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button1.setIconTextGap(5);
        search_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button1.setName("doctor_button"); // NOI18N
        search_button1.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button1MousePressed(evt);
            }
        });
        search_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas2.add(search_button1);

        filter_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button1.setForeground(new java.awt.Color(99, 110, 111));
        filter_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button1.setToolTipText("");
        filter_button1.setAlignmentY(0.1F);
        filter_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button1.setFocusable(false);
        filter_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button1.setIconTextGap(5);
        filter_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button1.setName("doctor_button"); // NOI18N
        filter_button1.setPreferredSize(new java.awt.Dimension(129, 53));
        filter_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button1MousePressed(evt);
            }
        });
        filter_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas2.add(filter_button1);

        delete_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        delete_button1.setForeground(new java.awt.Color(99, 110, 111));
        delete_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/delete_.png"))); // NOI18N
        delete_button1.setToolTipText("");
        delete_button1.setAlignmentY(0.1F);
        delete_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button1.setFocusable(false);
        delete_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete_button1.setIconTextGap(5);
        delete_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        delete_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        delete_button1.setName("doctor_button"); // NOI18N
        delete_button1.setPreferredSize(new java.awt.Dimension(129, 53));
        delete_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        delete_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delete_button1MousePressed(evt);
            }
        });
        delete_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas2.add(delete_button1);

        clear_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button1.setForeground(new java.awt.Color(99, 110, 111));
        clear_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button1.setToolTipText("");
        clear_button1.setAlignmentY(0.1F);
        clear_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button1.setFocusable(false);
        clear_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button1.setIconTextGap(5);
        clear_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button1.setName("doctor_button"); // NOI18N
        clear_button1.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button1MousePressed(evt);
            }
        });
        clear_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas2.add(clear_button1);

        registers_label1.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_label1.setText("Registros");

        special_label2.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        special_label2.setText("Habilidades");

        actualEnfermero_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/update_.png"))); // NOI18N
        actualEnfermero_button.setContentAreaFilled(false);
        actualEnfermero_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualEnfermero_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updatepressed_.png"))); // NOI18N
        actualEnfermero_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updateselected_.png"))); // NOI18N
        actualEnfermero_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualEnfermero_buttonActionPerformed(evt);
            }
        });

        guardarEnfermero_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardarEnfermero_button.setContentAreaFilled(false);
        guardarEnfermero_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarEnfermero_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardarEnfermero_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardarEnfermero_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarEnfermero_buttonActionPerformed(evt);
            }
        });

        back_button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button4.setBorderPainted(false);
        back_button4.setContentAreaFilled(false);
        back_button4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button4.setFocusable(false);
        back_button4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button4MousePressed(evt);
            }
        });

        registers_table3.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        registers_table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Direcci√≥n", "Tel√©fono", "Email", "Experiencia", "Habilidades", "Cargo", "Salario", "Area", "Jefe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(registers_table3);

        agregarhabilidades.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        agregarhabilidades.setForeground(new java.awt.Color(99, 110, 111));
        agregarhabilidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/agregar_.png"))); // NOI18N
        agregarhabilidades.setToolTipText("");
        agregarhabilidades.setAlignmentY(0.1F);
        agregarhabilidades.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agregarhabilidades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregarhabilidades.setFocusable(false);
        agregarhabilidades.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregarhabilidades.setIconTextGap(5);
        agregarhabilidades.setMaximumSize(new java.awt.Dimension(129, 129));
        agregarhabilidades.setMinimumSize(new java.awt.Dimension(129, 129));
        agregarhabilidades.setName("doctor_button"); // NOI18N
        agregarhabilidades.setPreferredSize(new java.awt.Dimension(53, 53));
        agregarhabilidades.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregarhabilidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agregarhabilidadesMousePressed(evt);
            }
        });
        agregarhabilidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarhabilidadesActionPerformed(evt);
            }
        });

        habilidad_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        limpiarhabilidades.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        limpiarhabilidades.setForeground(new java.awt.Color(99, 110, 111));
        limpiarhabilidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clearhabi_.png"))); // NOI18N
        limpiarhabilidades.setToolTipText("");
        limpiarhabilidades.setAlignmentY(0.1F);
        limpiarhabilidades.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        limpiarhabilidades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiarhabilidades.setFocusable(false);
        limpiarhabilidades.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limpiarhabilidades.setIconTextGap(5);
        limpiarhabilidades.setMaximumSize(new java.awt.Dimension(129, 129));
        limpiarhabilidades.setMinimumSize(new java.awt.Dimension(129, 129));
        limpiarhabilidades.setName("doctor_button"); // NOI18N
        limpiarhabilidades.setPreferredSize(new java.awt.Dimension(53, 53));
        limpiarhabilidades.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limpiarhabilidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                limpiarhabilidadesMousePressed(evt);
            }
        });
        limpiarhabilidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarhabilidadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout update_panelLayout = new javax.swing.GroupLayout(update_panel);
        update_panel.setLayout(update_panelLayout);
        update_panelLayout.setHorizontalGroup(
            update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(update_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(update_panelLayout.createSequentialGroup()
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addComponent(registers_label1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(update_panelLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(name_label1)
                                            .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(id_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dir_label1))
                                            .addComponent(tel_label1)
                                            .addComponent(mail_label1))
                                        .addGap(18, 18, 18)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(id_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(name_field1)
                                            .addComponent(dir_field1)
                                            .addComponent(mail_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tel_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(327, 327, 327))
                                    .addGroup(update_panelLayout.createSequentialGroup()
                                        .addComponent(personal_info_label1)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(update_panelLayout.createSequentialGroup()
                                                .addGap(243, 243, 243)
                                                .addComponent(aditional_info_label1))
                                            .addGroup(update_panelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(money_label1)
                                                    .addComponent(cod_area_label1)
                                                    .addComponent(position_label1)
                                                    .addComponent(boss_label1))
                                                .addGap(4, 4, 4)
                                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(position_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(name_area_box1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(boss_box1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(money_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(back_button4)))
                        .addContainerGap())
                    .addGroup(update_panelLayout.createSequentialGroup()
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(update_panelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(special_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(special_label2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(habilidad_field, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(exper_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(limpiarhabilidades, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(agregarhabilidades, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addGap(18, 18, Short.MAX_VALUE)
                                        .addComponent(guardarEnfermero_button, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(profesional_info_label1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actualEnfermero_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addComponent(jScrollPane6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(toolbar_users_areas2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        update_panelLayout.setVerticalGroup(
            update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(update_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(update_panelLayout.createSequentialGroup()
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(personal_info_label1)
                            .addComponent(aditional_info_label1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(position_label1)
                            .addComponent(position_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(back_button4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(money_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(money_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(name_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dir_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dir_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod_area_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_area_box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tel_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tel_field1)
                    .addComponent(boss_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boss_box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(update_panelLayout.createSequentialGroup()
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mail_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mail_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(profesional_info_label1)
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(special_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exper_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(special_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(habilidad_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(registers_label1))
                            .addGroup(update_panelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(agregarhabilidades, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpiarhabilidades, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(update_panelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guardarEnfermero_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actualEnfermero_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGroup(update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolbar_users_areas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(443, 443, 443))
        );

        users_tabbed.addTab("Enfermero/as", update_panel);

        cod_Area_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cod_Area_label.setText("Cod. Area");

        name_Area_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        name_Area_label.setText("Nombre Area");

        descrip_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descrip_label.setText("Descripci√≥n");

        namearea_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namearea_fieldActionPerformed(evt);
            }
        });

        personal_info_label2.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        personal_info_label2.setText("Informaci√≥n");

        toolbar_users_areas3.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        toolbar_users_areas3.setRollover(true);
        toolbar_users_areas3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas3MousePressed(evt);
            }
        });

        search_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button2.setForeground(new java.awt.Color(99, 110, 111));
        search_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/search_.png"))); // NOI18N
        search_button2.setToolTipText("");
        search_button2.setAlignmentY(0.1F);
        search_button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button2.setIconTextGap(5);
        search_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button2.setName("doctor_button"); // NOI18N
        search_button2.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button2MousePressed(evt);
            }
        });
        search_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button2ActionPerformed(evt);
            }
        });
        toolbar_users_areas3.add(search_button2);

        filter_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button2.setForeground(new java.awt.Color(99, 110, 111));
        filter_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button2.setToolTipText("");
        filter_button2.setAlignmentY(0.1F);
        filter_button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button2.setFocusable(false);
        filter_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button2.setIconTextGap(5);
        filter_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button2.setName("doctor_button"); // NOI18N
        filter_button2.setPreferredSize(new java.awt.Dimension(129, 53));
        filter_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button2MousePressed(evt);
            }
        });
        filter_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_button2ActionPerformed(evt);
            }
        });
        toolbar_users_areas3.add(filter_button2);

        delete_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        delete_button2.setForeground(new java.awt.Color(99, 110, 111));
        delete_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/delete_.png"))); // NOI18N
        delete_button2.setToolTipText("");
        delete_button2.setAlignmentY(0.1F);
        delete_button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button2.setFocusable(false);
        delete_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete_button2.setIconTextGap(5);
        delete_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        delete_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        delete_button2.setName("doctor_button"); // NOI18N
        delete_button2.setPreferredSize(new java.awt.Dimension(129, 53));
        delete_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        delete_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delete_button2MousePressed(evt);
            }
        });
        delete_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button2ActionPerformed(evt);
            }
        });
        toolbar_users_areas3.add(delete_button2);

        clear_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button2.setForeground(new java.awt.Color(99, 110, 111));
        clear_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button2.setToolTipText("");
        clear_button2.setAlignmentY(0.1F);
        clear_button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button2.setFocusable(false);
        clear_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button2.setIconTextGap(5);
        clear_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button2.setName("doctor_button"); // NOI18N
        clear_button2.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button2MousePressed(evt);
            }
        });
        clear_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button2ActionPerformed(evt);
            }
        });
        toolbar_users_areas3.add(clear_button2);

        registers_table2.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Cod", "Nombre", "Descripci√≥n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(registers_table2);
        if (registers_table2.getColumnModel().getColumnCount() > 0) {
            registers_table2.getColumnModel().getColumn(0).setMinWidth(50);
            registers_table2.getColumnModel().getColumn(0).setMaxWidth(50);
            registers_table2.getColumnModel().getColumn(2).setMinWidth(250);
            registers_table2.getColumnModel().getColumn(2).setMaxWidth(250);
        }

        registers_label2.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_label2.setText("Registros");

        descriparea_field.setColumns(20);
        descriparea_field.setRows(5);
        jScrollPane5.setViewportView(descriparea_field);

        actualArea_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/update_.png"))); // NOI18N
        actualArea_button.setContentAreaFilled(false);
        actualArea_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualArea_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updatepressed_.png"))); // NOI18N
        actualArea_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updateselected_.png"))); // NOI18N
        actualArea_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualArea_buttonActionPerformed(evt);
            }
        });

        guardarArea_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardarArea_button.setContentAreaFilled(false);
        guardarArea_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarArea_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardarArea_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardarArea_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArea_buttonActionPerformed(evt);
            }
        });

        back_button5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button5.setBorderPainted(false);
        back_button5.setContentAreaFilled(false);
        back_button5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button5.setFocusable(false);
        back_button5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button5.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout area_panelLayout = new javax.swing.GroupLayout(area_panel);
        area_panel.setLayout(area_panelLayout);
        area_panelLayout.setHorizontalGroup(
            area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(area_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(area_panelLayout.createSequentialGroup()
                        .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personal_info_label2)
                            .addGroup(area_panelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name_Area_label)
                                    .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cod_Area_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(descrip_label)))
                                .addGap(18, 18, 18)
                                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codarea_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namearea_field, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back_button5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(area_panelLayout.createSequentialGroup()
                        .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registers_label2)
                            .addGroup(area_panelLayout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(guardarArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actualArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 378, Short.MAX_VALUE))
                    .addGroup(area_panelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toolbar_users_areas3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        area_panelLayout.setVerticalGroup(
            area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(area_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(area_panelLayout.createSequentialGroup()
                        .addComponent(personal_info_label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cod_Area_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codarea_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namearea_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_Area_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(back_button5))
                .addGap(6, 6, 6)
                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descrip_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(area_panelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guardarArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(registers_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(area_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolbar_users_areas3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        users_tabbed.addTab("Areas", area_panel);

        info_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        info_label.setText("Informaci√≥n");

        numCama_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numCama_label.setText("No. Cama");

        descriCama_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descriCama_label.setText("Descripci√≥n");

        AreaCama_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        AreaCama_label.setText("Area");

        estadoCama_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        estadoCama_label.setText("Estado");

        estadoCama_group.add(usada_radio);
        usada_radio.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        usada_radio.setText("En uso");

        estadoCama_group.add(libre_radio);
        libre_radio.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        libre_radio.setText("Libre");

        areas_box.setBackground(java.awt.Color.white);
        areas_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        numCama_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numCama_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numCama_fieldActionPerformed(evt);
            }
        });
        numCama_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numCama_fieldKeyTyped(evt);
            }
        });

        back_button6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button6.setBorderPainted(false);
        back_button6.setContentAreaFilled(false);
        back_button6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button6.setFocusable(false);
        back_button6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button6.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button6MousePressed(evt);
            }
        });

        actualCama_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/update_.png"))); // NOI18N
        actualCama_button.setContentAreaFilled(false);
        actualCama_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualCama_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updatepressed_.png"))); // NOI18N
        actualCama_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/updateselected_.png"))); // NOI18N
        actualCama_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualCama_buttonActionPerformed(evt);
            }
        });

        guardarCama_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/save_.png"))); // NOI18N
        guardarCama_button.setContentAreaFilled(false);
        guardarCama_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarCama_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressed_.png"))); // NOI18N
        guardarCama_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselected_.png"))); // NOI18N
        guardarCama_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCama_buttonActionPerformed(evt);
            }
        });

        registers_table4.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_table4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "No. ", "Descripci√≥n", "Area", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        registros_scroll.setViewportView(registers_table4);
        if (registers_table4.getColumnModel().getColumnCount() > 0) {
            registers_table4.getColumnModel().getColumn(0).setMinWidth(50);
            registers_table4.getColumnModel().getColumn(0).setMaxWidth(50);
            registers_table4.getColumnModel().getColumn(2).setMinWidth(250);
            registers_table4.getColumnModel().getColumn(2).setMaxWidth(250);
            registers_table4.getColumnModel().getColumn(3).setMinWidth(100);
            registers_table4.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        camas_toolbar.setBackground(new java.awt.Color(132, 182, 188));
        camas_toolbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        camas_toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        camas_toolbar.setRollover(true);
        camas_toolbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                camas_toolbarMousePressed(evt);
            }
        });

        search_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button3.setForeground(new java.awt.Color(99, 110, 111));
        search_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/search_.png"))); // NOI18N
        search_button3.setToolTipText("");
        search_button3.setAlignmentY(0.1F);
        search_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button3.setIconTextGap(5);
        search_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button3.setName("doctor_button"); // NOI18N
        search_button3.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button3MousePressed(evt);
            }
        });
        search_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button3ActionPerformed(evt);
            }
        });
        camas_toolbar.add(search_button3);

        filter_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button3.setForeground(new java.awt.Color(99, 110, 111));
        filter_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button3.setToolTipText("");
        filter_button3.setAlignmentY(0.1F);
        filter_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button3.setFocusable(false);
        filter_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button3.setIconTextGap(5);
        filter_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button3.setName("doctor_button"); // NOI18N
        filter_button3.setPreferredSize(new java.awt.Dimension(129, 53));
        filter_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button3MousePressed(evt);
            }
        });
        filter_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_button3ActionPerformed(evt);
            }
        });
        camas_toolbar.add(filter_button3);

        delete_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        delete_button3.setForeground(new java.awt.Color(99, 110, 111));
        delete_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/delete_.png"))); // NOI18N
        delete_button3.setToolTipText("");
        delete_button3.setAlignmentY(0.1F);
        delete_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button3.setFocusable(false);
        delete_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete_button3.setIconTextGap(5);
        delete_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        delete_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        delete_button3.setName("doctor_button"); // NOI18N
        delete_button3.setPreferredSize(new java.awt.Dimension(129, 53));
        delete_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        delete_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delete_button3MousePressed(evt);
            }
        });
        delete_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button3ActionPerformed(evt);
            }
        });
        camas_toolbar.add(delete_button3);

        clear_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button3.setForeground(new java.awt.Color(99, 110, 111));
        clear_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button3.setToolTipText("");
        clear_button3.setAlignmentY(0.1F);
        clear_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button3.setFocusable(false);
        clear_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button3.setIconTextGap(5);
        clear_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button3.setName("doctor_button"); // NOI18N
        clear_button3.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button3MousePressed(evt);
            }
        });
        clear_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button3ActionPerformed(evt);
            }
        });
        camas_toolbar.add(clear_button3);

        registers_label3.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        registers_label3.setText("Registros");

        descripcama_field.setColumns(20);
        descripcama_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        descripcama_field.setRows(5);
        jScrollPane3.setViewportView(descripcama_field);

        javax.swing.GroupLayout camas_panelLayout = new javax.swing.GroupLayout(camas_panel);
        camas_panel.setLayout(camas_panelLayout);
        camas_panelLayout.setHorizontalGroup(
            camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camas_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registros_scroll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(camas_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(camas_panelLayout.createSequentialGroup()
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camas_panelLayout.createSequentialGroup()
                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(camas_panelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(camas_panelLayout.createSequentialGroup()
                                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, camas_panelLayout.createSequentialGroup()
                                                .addComponent(descriCama_label)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(camas_panelLayout.createSequentialGroup()
                                                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(numCama_label)
                                                    .addComponent(estadoCama_label))
                                                .addGap(28, 28, 28)))
                                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(camas_panelLayout.createSequentialGroup()
                                                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(camas_panelLayout.createSequentialGroup()
                                                        .addComponent(usada_radio)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(libre_radio))
                                                    .addComponent(numCama_field, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 117, Short.MAX_VALUE))
                                            .addGroup(camas_panelLayout.createSequentialGroup()
                                                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(areas_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, camas_panelLayout.createSequentialGroup()
                                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(camas_panelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(guardarCama_button, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(actualCama_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(camas_panelLayout.createSequentialGroup()
                                                .addComponent(AreaCama_label)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(304, 304, 304))))
                            .addGroup(camas_panelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(info_label)
                                .addGap(225, 225, 225)))
                        .addComponent(back_button6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(camas_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(registers_label3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        camas_panelLayout.setVerticalGroup(
            camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camas_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back_button6)
                    .addGroup(camas_panelLayout.createSequentialGroup()
                        .addComponent(info_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numCama_label)
                            .addComponent(numCama_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriCama_label)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AreaCama_label)
                    .addComponent(areas_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estadoCama_label)
                    .addComponent(usada_radio)
                    .addComponent(libre_radio))
                .addGap(35, 35, 35)
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarCama_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualCama_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(registers_label3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(camas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(camas_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registros_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(439, Short.MAX_VALUE))
        );

        users_tabbed.addTab("Camas", camas_panel);

        javax.swing.GroupLayout panel_usersLayout = new javax.swing.GroupLayout(panel_users);
        panel_users.setLayout(panel_usersLayout);
        panel_usersLayout.setHorizontalGroup(
            panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(users_tabbed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_usersLayout.setVerticalGroup(
            panel_usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_usersLayout.createSequentialGroup()
                .addComponent(users_tabbed, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_users, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_users, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void users_tabbedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_users_tabbedStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_users_tabbedStateChanged

    private void namearea_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namearea_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namearea_fieldActionPerformed

    private void search_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button2MousePressed
         DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Cod");
        model.addColumn("Nombre");
        model.addColumn("Descripci√≥n");
        
        Area area = new Area();
        String nom = JOptionPane.showInputDialog(null, "Inserte Nombre del Area", "");
        area = area_control.consultarArea(nom);
        if(area != null){
            model.addRow(new Object[]{area.getCodigo(), area.getNombre(), area.getDescripcion()});
            registers_table2.setModel(model);
        }
        else
            JOptionPane.showMessageDialog(null, "No existe un Area con ese c√≥digo.");
    }//GEN-LAST:event_search_button2MousePressed

    private void search_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button2ActionPerformed

    private void delete_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_button2MousePressed
        int numRows = registers_table2.getSelectedRows().length;       
        if(JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que desea eliminar "+numRows+" registros?", "Alerta!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            DefaultTableModel model = (DefaultTableModel) registers_table2.getModel();
            for(int i=0; i<numRows ; i++ ) {
                int row = registers_table2.getSelectedRow();
                int cod = Integer.parseInt(model.getValueAt(row, 0).toString());
                area_control.eliminarArea(cod);
                model.removeRow(registers_table2.getSelectedRow());
            }
            JOptionPane.showMessageDialog(null, "Registros Eliminados.");
        }
        
    }//GEN-LAST:event_delete_button2MousePressed

    private void delete_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_button2ActionPerformed

    private void clear_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button2MousePressed
        DefaultTableModel model = (DefaultTableModel) registers_table2.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button2MousePressed

    private void clear_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button2ActionPerformed

    private void toolbar_users_areas3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas3MousePressed

    private void toolbar_users_areas2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas2MousePressed

    private void clear_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button1ActionPerformed

    private void clear_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button1MousePressed
        DefaultTableModel model = (DefaultTableModel) registers_table3.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button1MousePressed

    private void delete_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_button1ActionPerformed

    private void delete_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_button1MousePressed
        int numRows = registers_table3.getSelectedRows().length;       
        if(JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que desea eliminar "+numRows+" registros?", "ALERTA!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            DefaultTableModel model = (DefaultTableModel) registers_table3.getModel();
            for(int i=0; i<numRows ; i++ ) {
                int row = registers_table3.getSelectedRow();
                int id = Integer.parseInt(model.getValueAt(row, 0).toString());
                habilidades_enfermera_control.eliminarHabilidades(id);
                enfermera_control.eliminarEnfermera(id);
                empleado_control.eliminarEmpleado(id);
                persona_control.eliminarPersona(id);
                model.removeRow(registers_table3.getSelectedRow());
            }
            JOptionPane.showMessageDialog(null, "Registros Eliminados.");
        }
    }//GEN-LAST:event_delete_button1MousePressed

    private void filter_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_button1ActionPerformed

    private void filter_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button1MousePressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Nombre");
        model.addColumn("Direcci√≥n");
        model.addColumn("Tel√©fono");
        model.addColumn("Email");
        model.addColumn("Experiencia");
        model.addColumn("Habilidades");
        model.addColumn("Cargo");
        model.addColumn("Salario");
        model.addColumn("√Årea");
        model.addColumn("Jefes");
        Vector<Enfermera> enfermeras = new Vector<Enfermera>();
        Vector<Empleado> empleados = new Vector<Empleado>();
        Vector<Persona> personas = new Vector<Persona>();
        registers_table3.setModel(model);
        String[] areas = new String[area_control.listarAreas().size()];
        for(int i=0; i< areas.length; i++){
            areas[i] = area_control.listarAreas().get(i).getNombre();
        }
        String filtro = (String) JOptionPane.showInputDialog(null, "Seleccione un area:", "FILTRAR", JOptionPane.DEFAULT_OPTION,null,areas, areas[0]);
        enfermeras = enfermera_control.filtrarEnfermera(filtro);
        if(!enfermeras.isEmpty()){
            for(int i = 0; i< enfermeras.size(); i++){
                Empleado empleado = new Empleado();
                Persona persona = new Persona();
                empleado = empleado_control.consultarEmpleado(enfermeras.get(i).getId());
                persona = persona_control.consultarPersona(enfermeras.get(i).getId());
                
                String habilidades = "";
                for (int j=0; j<habilidades_enfermera_control.consultarHabilidad(enfermeras.get(i).getId()).size(); j++){
                    habilidades += habilidades_enfermera_control.consultarHabilidad(empleado.getId()).get(j).toString() + " ";
                }
                
                model.addRow(new Object[]{persona.getId(), persona.getNombre(), persona.getDireccion(),persona.getTelefono(), empleado.getEmail(),
                enfermeras.get(i).getExperiencia(), habilidades, empleado.getCargo(), empleado.getSalario(), empleado.getArea(), empleado.getJefe()}); 
            }     
        }
        else
            JOptionPane.showMessageDialog(null, "No existen Enfermero/as en esa Area.");
    }//GEN-LAST:event_filter_button1MousePressed

    private void search_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button1ActionPerformed

    private void search_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button1MousePressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Nombre");
        model.addColumn("Direcci√≥n");
        model.addColumn("Tel√©fono");
        model.addColumn("Email");
        model.addColumn("Experiencia");
        model.addColumn("Habilidades");
        model.addColumn("Cargo");
        model.addColumn("Salario");
        model.addColumn("√Årea");
        model.addColumn("Jefes");
        
        Enfermera enfermera = new Enfermera();
        Empleado empleado = new Empleado();
        Persona persona = new Persona();
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Inserte Id del Enfermero", ""));
        enfermera = enfermera_control.consultarEnfermera(id);
        empleado = empleado_control.consultarEmpleado(id);
        persona = persona_control.consultarPersona(id);
        
        
        
        
        if(enfermera != null && empleado != null && persona != null){
            String habilidades = "";
            for (int i=0; i<habilidades_enfermera_control.consultarHabilidad(empleado.getId()).size(); i++){
                habilidades += habilidades_enfermera_control.consultarHabilidad(id).get(i).getHabilidad() + " ";
                
            }
            String empleadoArea = Integer.toString(empleado.getArea()) + "-" + area_control.consultarAreaCodigo(empleado.getArea()).getNombre();
            String empleadoJefe = Integer.toString(empleado.getJefe()) + "-" + persona_control.consultarPersona(empleado.getJefe()).getNombre();
            
            model.addRow(new Object[]{persona.getId(), persona.getNombre(), persona.getDireccion(),persona.getTelefono(), empleado.getEmail(),
            enfermera.getExperiencia(), habilidades, empleado.getCargo(), empleado.getSalario(), empleadoArea, empleadoJefe});
            this.registers_table3.setModel(model);
        }
        else
            JOptionPane.showMessageDialog(null, "Error. \n Verifique el n√∫mero de Identidad del enfermero.");
    }//GEN-LAST:event_search_button1MousePressed

    private void dir_field1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dir_field1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dir_field1ActionPerformed

    private void name_field1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_field1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_field1ActionPerformed

    private void toolbar_users_areas1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas1MousePressed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed

    }//GEN-LAST:event_clear_buttonActionPerformed

    private void clear_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) registers_table.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }

    }//GEN-LAST:event_clear_buttonMousePressed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void delete_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_buttonMousePressed
        int numRows = registers_table.getSelectedRows().length;       
        if(JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que desea eliminar "+numRows+" registros?", "ALERTA!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            DefaultTableModel model = (DefaultTableModel) registers_table.getModel();
            for(int i=0; i<numRows ; i++ ) {
                int row = registers_table.getSelectedRow();
                int id = Integer.parseInt(model.getValueAt(row, 0).toString());
                medico_control.eliminarMedico(id);
                empleado_control.eliminarEmpleado(id);
                persona_control.eliminarPersona(id);
                model.removeRow(registers_table.getSelectedRow());
            }
            JOptionPane.showMessageDialog(null, "Registros Eliminados.");
        }
    }//GEN-LAST:event_delete_buttonMousePressed

    private void filter_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_buttonActionPerformed

    private void filter_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_buttonMousePressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Nombre");
        model.addColumn("Direcci√≥n");
        model.addColumn("Tel√©fono");
        model.addColumn("Email");
        model.addColumn("Experiencia");
        model.addColumn("Habilidades");
        model.addColumn("Cargo");
        model.addColumn("Salario");
        model.addColumn("√Årea");
        model.addColumn("Jefes");
        Vector<Medico> medicos = new Vector<Medico>();
        Vector<Empleado> empleados = new Vector<Empleado>();
        Vector<Persona> personas = new Vector<Persona>();
        registers_table.setModel(model);
        String[] areas = new String[area_control.listarAreas().size()];
        for(int i=0; i< areas.length; i++){
            areas[i] = area_control.listarAreas().get(i).getNombre();
        }
        String filtro = (String) JOptionPane.showInputDialog(null, "Seleccione un area:", "FILTRAR", JOptionPane.DEFAULT_OPTION,null,areas, areas[0]);
        medicos = medico_control.filtrarMedico(filtro);
        if(!medicos.isEmpty()){
            for(int i = 0; i< medicos.size(); i++){
                Empleado empleado = new Empleado();
                Persona persona = new Persona();
                empleado = empleado_control.consultarEmpleado(medicos.get(i).getId());
                persona = persona_control.consultarPersona(medicos.get(i).getId());
       
                model.addRow(new Object[]{persona.getId(), persona.getNombre(), persona.getDireccion(),persona.getTelefono(), empleado.getEmail(),
                medicos.get(i).getEspecialidad(), medicos.get(i).getNumLicencia(),medicos.get(i).getUniversidad(), empleado.getCargo(), empleado.getSalario(), empleado.getArea(), empleado.getJefe()}); 
            }     
        }
        else
            JOptionPane.showMessageDialog(null, "No existen M√©dicos en esa Area.");
    }//GEN-LAST:event_filter_buttonMousePressed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_buttonActionPerformed

    private void search_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_buttonMousePressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Nombre");
        model.addColumn("Direcci√≥n");
        model.addColumn("Tel√©fono");
        model.addColumn("Email");
        model.addColumn("Especialidad");
        model.addColumn("Licencia");
        model.addColumn("Universidad");
        model.addColumn("Cargo");
        model.addColumn("Salario");
        model.addColumn("√Årea");
        model.addColumn("Jefe");

        
        Medico medico = new Medico();
        Empleado empleado = new Empleado();
        Persona persona = new Persona();
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Inserte Id del M√©dico", ""));
        medico = medico_control.consultarMedico(id);
        empleado = empleado_control.consultarEmpleado(id);
        persona = persona_control.consultarPersona(id);
        

        if(medico != null && empleado != null && persona != null){
            
            String empleadoArea = Integer.toString(empleado.getArea()) + "-" + area_control.consultarAreaCodigo(empleado.getArea()).getNombre();
        String empleadoJefe = Integer.toString(empleado.getJefe()) + "-" + persona_control.consultarPersona(empleado.getJefe()).getNombre();
            
            model.addRow(new Object[]{persona.getId(), persona.getNombre(), persona.getDireccion(),persona.getTelefono(), empleado.getEmail(),
            medico.getEspecialidad(), medico.getNumLicencia(), medico.getUniversidad(), empleado.getCargo(), empleado.getSalario(), empleadoArea, empleadoJefe}); 
            this.registers_table.setModel(model);
        }
        else
            JOptionPane.showMessageDialog(null, "Error. \n Verifique el n√∫mero de Identidad del M√©dico.");
    }//GEN-LAST:event_search_buttonMousePressed

    private void dir_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dir_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dir_fieldActionPerformed

    private void name_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_fieldActionPerformed

    private void search_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button3MousePressed

         DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Descripci√≥n");
        model.addColumn("√Årea");
        model.addColumn("Estado");
        
        
        Cama cama;
        int num = Integer.parseInt(JOptionPane.showInputDialog(null, "Inserte N√∫mero de la Cama", ""));
        cama = cama_control.consultarCama(num);
        if(cama != null){
            String camaArea = Integer.toString(cama.getArea()) + "-" + area_control.consultarAreaCodigo(cama.getArea()).getNombre();
  
            model.addRow(new Object[]{cama.getNumero(), cama.getDescripcion(), camaArea, cama.getEstado()});  
            registers_table4.setModel(model);
        }
        else
            JOptionPane.showMessageDialog(null, "No existe una Cama con ese n√∫mero.");
    }//GEN-LAST:event_search_button3MousePressed

    private void search_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button3ActionPerformed

    private void filter_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button3MousePressed
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Descripci√≥n");
        model.addColumn("√Årea");
        model.addColumn("Estado");
        registers_table4.setModel(model);
        Vector <Cama> camas = new Vector<Cama>();
        String[] estados = {
            "En uso",
            "Libre"
        };
        String filtro = (String) JOptionPane.showInputDialog(null, "Seleccione un estado:", "FILTRAR", JOptionPane.DEFAULT_OPTION,null,estados, estados[0]);

        camas = cama_control.filtrarCama(filtro);
        if(!camas.isEmpty()){
            for(int i = 0; i< camas.size(); i++){
                model.addRow(new Object[]{camas.get(i).getNumero(), camas.get(i).getDescripcion(), camas.get(i).getArea(), camas.get(i).getEstado()});
            }     
        }
        else
            JOptionPane.showMessageDialog(null, "No existen camas en ese Estado.");
    }//GEN-LAST:event_filter_button3MousePressed

    private void filter_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_button3ActionPerformed

    private void delete_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_button3MousePressed
        int numRows = registers_table4.getSelectedRows().length;       
        if(JOptionPane.showConfirmDialog(null, "¬øEst√° seguro que desea eliminar "+numRows+" registros?", "ALERTA!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            DefaultTableModel model = (DefaultTableModel) registers_table4.getModel();
            for(int i=0; i<numRows ; i++ ) {
                int row = registers_table4.getSelectedRow();
                int num = Integer.parseInt(model.getValueAt(row, 0).toString());
                cama_control.eliminarCama(num);
                model.removeRow(registers_table4.getSelectedRow());
            }
            JOptionPane.showMessageDialog(null, "Registros Eliminados.");
        }
    }//GEN-LAST:event_delete_button3MousePressed

    private void delete_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_button3ActionPerformed

    private void clear_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button3MousePressed
        DefaultTableModel model = (DefaultTableModel) registers_table4.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button3MousePressed

    private void clear_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button3ActionPerformed

    private void camas_toolbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_camas_toolbarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_camas_toolbarMousePressed

    private void agregarhabilidadesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarhabilidadesMousePressed
        if(!habilidad_field.getText().equals("")){
            tempHabil.add(habilidad_field.getText());
            JOptionPane.showMessageDialog(null, "Habilidad agregada √©xitosamente");
        }
        else {
            JOptionPane.showMessageDialog(null, "Ingrese los datos correctamente");
        }
    }//GEN-LAST:event_agregarhabilidadesMousePressed

    private void agregarhabilidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarhabilidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregarhabilidadesActionPerformed

    private void numCama_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numCama_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numCama_fieldActionPerformed

    private void guardarArea_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArea_buttonActionPerformed
        var1 = codarea_field.getText();
        var2 = namearea_field.getText();
        var3 = descriparea_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty()){
            int cod = Integer.parseInt(var1);
            String nom = var2;
            String descrip = var3;
        
            int numFilas;
            numFilas = area_control.insertarArea(cod, nom, descrip);
            if (numFilas == 1){       
                JOptionPane.showMessageDialog(null, "Area guardada exit√≥samente");
            }
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al guardar el Area. Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_guardarArea_buttonActionPerformed

    private void actualArea_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualArea_buttonActionPerformed
        var1 = codarea_field.getText();
        var2 = namearea_field.getText();
        var3 = descriparea_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty()){
            int cod = Integer.parseInt(var1);
            String nom = var2;
            String descrip = var3;
        
            int numFilas;
            numFilas = area_control.modificarArea(cod, nom, descrip);
            if (numFilas == 1){       
                JOptionPane.showMessageDialog(null, "Area guardada exit√≥samente");
            }
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al modificar el Area.\n Verifique que el c√≥digo insertado sea el correcto.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_actualArea_buttonActionPerformed

    private void filter_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_button2ActionPerformed

    private void filter_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button2MousePressed
         DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Cod");
        model.addColumn("Nombre");
        model.addColumn("Descripci√≥n");
        registers_table2.setModel(model);
        Vector <Area> areas = new Vector<Area>();
        String filtro = JOptionPane.showInputDialog(null,"Escriba una palabra para filtrar por 'Nombre'. \n Por ejemplo: 'ia'", "FILTRAR", QUESTION_MESSAGE);
        areas = area_control.filtrarArea(filtro);
        if(!areas.isEmpty()){
            for(int i = 0; i< areas.size(); i++){
                model.addRow(new Object[]{areas.get(i).getCodigo(), areas.get(i).getNombre(), areas.get(i).getDescripcion()});
            }     
        }
        else
            JOptionPane.showMessageDialog(null, "No existen Areas con ese filtro.");
    }//GEN-LAST:event_filter_button2MousePressed

    private void guardarCama_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCama_buttonActionPerformed
        var1 = numCama_field.getText();
        var2 = descripcama_field.getText();
        var3 = areas_box.getSelectedItem().toString();
        
        if(usada_radio.isSelected()){
            var4 = "En uso";
        }
        else {
            var4 = "Libre";
        }
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty()){
            int num = Integer.parseInt(var1);
            String descrip = var2;
            String[] parts = var3.split("-");
            int codArea = Integer.parseInt(parts[0]);     
            String estado = var4;
        
            int numFilas;
            numFilas = cama_control.insertarCama(num, descrip, codArea, estado);
            if (numFilas == 1){       
                JOptionPane.showMessageDialog(null, "Cama guardada exit√≥samente");
            }
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al guardar la Cama. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_guardarCama_buttonActionPerformed

    private void actualCama_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualCama_buttonActionPerformed
        var1 = numCama_field.getText();
        var2 = descripcama_field.getText();
        var3 = areas_box.getSelectedItem().toString();
        var4 = estadoCama_group.getSelection().getActionCommand();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty()){
            int num = Integer.parseInt(var1);
            String descrip = var2;
            int codArea = Integer.parseInt(var3);
            String estado = var4;
        
            int numFilas;
            numFilas = cama_control.modificarCama(num, descrip, codArea, estado);
            if (numFilas == 1){       
                JOptionPane.showMessageDialog(null, "Cama actualizada exit√≥samente");
            }
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al modificar la Cama.\n Verifique que el n√∫mero de cama insertado sea el correcto.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_actualCama_buttonActionPerformed

    private void limpiarhabilidadesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarhabilidadesMousePressed
        tempHabil.clear();
        JOptionPane.showMessageDialog(null, "Se han borrado las habilidades agregadas.");
    }//GEN-LAST:event_limpiarhabilidadesMousePressed

    private void limpiarhabilidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarhabilidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarhabilidadesActionPerformed

    private void guardarEnfermero_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarEnfermero_buttonActionPerformed
        var1 = id_field1.getText();
        var2 = name_field1.getText();
        var3 = dir_field1.getText();
        var4 = tel_field1.getText();
        var5 = position_field1.getText();
        var6 = money_field1.getText();
        var7 = mail_field1.getText();
        var8 = name_area_box1.getSelectedItem().toString();
        var9 = boss_box1.getSelectedItem().toString();
        var10 = exper_field1.getText();    
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty()
                && !var7.isEmpty() && !var8.isEmpty() && !var9.isEmpty() && !var10.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String cargo = var5;
            int salario = Integer.parseInt(var6);
            String mail = var7;            
            String[] parts = var8.split("-");
            int codArea = Integer.parseInt(parts[0]);     
            String[] parts2 = var9.split("-");
            int idJefe = Integer.parseInt(parts2[0]) ;
            int exper = Integer.parseInt(var10);
            boolean flag = true;
            int numFilas = persona_control.insertarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = empleado_control.insertarEmpleado(id, cargo, salario, mail, codArea, idJefe, nom);
                if (numFilas == 1){
                    numFilas = enfermera_control.insertarEnfermera(id, exper);
                    if(numFilas == 1){
                        for (int i = 0; i< tempHabil.size(); i++){
                            String habilidad = tempHabil.get(i);
                            numFilas = habilidades_enfermera_control.insertarHabilidad(habilidad, id);                            
                            if(numFilas != 1){
                                flag = false;
                                break;
                            }      
                        }
                    } else
                        flag = false;
                }else
                    flag = false;
                
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "Enfermero/a registrado/a exit√≥samente\nUsuario: "+empleado_control.consultarEmpleado(id).getUsuario()+"\nContrase√±a: "+empleado_control.consultarEmpleado(id).getContrasena()+"");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al registrar al Empleado. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_guardarEnfermero_buttonActionPerformed

    private void actualEnfermero_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualEnfermero_buttonActionPerformed
        var1 = id_field1.getText();
        var2 = name_field1.getText();
        var3 = dir_field1.getText();
        var4 = tel_field1.getText();
        var5 = position_field1.getText();
        var6 = money_field1.getText();
        var7 = mail_field1.getText();
        var8 = name_area_box1.getSelectedItem().toString();
        var9 = boss_box1.getSelectedItem().toString();
        var10 = exper_field1.getText(); 
        
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty()
                && !var7.isEmpty() && !var8.isEmpty() && !var9.isEmpty() && !var10.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String cargo = var5;
            int salario = Integer.parseInt(var6);
            String mail = var7;            
            int codArea = area_control.consultarArea(var8).getCodigo();
            int idJefe =  Integer.parseInt(var9);
            int exper = Integer.parseInt(var10);
            boolean flag = true;
            int numFilas = persona_control.modificarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = empleado_control.modificarEmpleado(id, cargo, salario, mail, codArea, idJefe);
                if (numFilas == 1){
                    numFilas = enfermera_control.modificarEnfermera(id, exper);
                    if(numFilas == 1){
                        for (int i = 0; i< tempHabil.size(); i++){
                            String habilidad = tempHabil.get(i);
                            numFilas = habilidades_enfermera_control.modificarHabilidad(habilidad, id);
                            if(numFilas != 1){
                                flag = false;
                                break;
                            }      
                        }
                    } else
                        flag = false;          
                }else
                    flag = false;
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "Enfermero/a actualizado/a exit√≥samente");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al modificar el empleado.\n Verifique que el ID insertado sea el correcto.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_actualEnfermero_buttonActionPerformed

    private void guardarMedico_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMedico_buttonActionPerformed
        var1 = id_field.getText();
        var2 = name_field.getText();
        var3 = dir_field.getText();
        var4 = tel_field.getText();
        var5 = position_field.getText();
        var6 = money_field.getText();
        var7 = mail_field.getText();
        var8 = cod_area_box.getSelectedItem().toString();
        var9 = boss_box.getSelectedItem().toString();
        var10 = special_field.getText();   
        var11 = licence_field.getText();
        var12 = univers_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty()
                && !var7.isEmpty() && !var8.isEmpty() && !var9.isEmpty() && !var10.isEmpty() && !var11.isEmpty() && !var10.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String cargo = var5;
            int salario = Integer.parseInt(var6);
            String mail = var7;            
            String[] parts = var8.split("-");
            int codArea = Integer.parseInt(parts[0]);     
            String[] parts2 = var9.split("-");
            int idJefe = Integer.parseInt(parts2[0]) ;
            String especial = var10;
            String license = var11;
            String univ = var12;
            boolean flag = true;
            int numFilas = persona_control.insertarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = empleado_control.insertarEmpleado(id, cargo, salario, mail, codArea, idJefe, nom);
                if (numFilas == 1){
                    numFilas = medico_control.insertarMedico(id, especial, license, univ);
                    if(numFilas != 1)
                        flag = false;
                }else
                    flag = false;
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "M√©dico/a registrado/a exit√≥samente\nUsuario: "+empleado_control.consultarEmpleado(id).getUsuario()+"\nContrase√±a: "+empleado_control.consultarEmpleado(id).getContrasena()+"");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al registrar al Empleado. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_guardarMedico_buttonActionPerformed

    private void actualMedico_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualMedico_buttonActionPerformed
        var1 = id_field.getText();
        var2 = name_field.getText();
        var3 = dir_field.getText();
        var4 = tel_field.getText();
        var5 = position_field.getText();
        var6 = money_field.getText();
        var7 = mail_field.getText();
        var8 = cod_area_box.getSelectedItem().toString();
        var9 = boss_box.getSelectedItem().toString();
        var10 = special_field.getText();   
        var11 = licence_field.getText();
        var12 = univers_field.getText();
        if(!var1.isEmpty() && !var2.isEmpty() && !var3.isEmpty() && !var4.isEmpty() && !var5.isEmpty() && !var6.isEmpty()
                && !var7.isEmpty() && !var8.isEmpty() && !var9.isEmpty() && !var10.isEmpty() && !var11.isEmpty() && !var10.isEmpty()){
            int id = Integer.parseInt(var1);
            String nom = var2;
            String dir = var3;
            String tel = var4;
            String cargo = var5;
            int salario = Integer.parseInt(var6);
            String mail = var7;            
            int codArea = area_control.consultarArea(var8).getCodigo();
            int idJefe =  Integer.parseInt(var9);
            String especial = var10;
            String license = var11;
            String univ = var12;
            boolean flag = true;
            int numFilas = persona_control.modificarPersona(id, nom, dir, tel);
            if (numFilas == 1){
                numFilas = empleado_control.modificarEmpleado(id, cargo, salario, mail, codArea, idJefe);
                if (numFilas == 1){
                    numFilas = medico_control.modificarMedico(id, especial, license, univ);
                    if(numFilas != 1)
                        flag = false;
                }else
                    flag = false;
            }else
                flag = false;
            if(flag==true)
                JOptionPane.showMessageDialog(null, "M√©dico/a actualizado/a exit√≥samente");
            else
                JOptionPane.showMessageDialog(null, "Ocurri√≥ un problema al modificar al Empleado. \n Intente de Nuevo.");
        }
        else
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos.");
    }//GEN-LAST:event_actualMedico_buttonActionPerformed

    private void back_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button3MousePressed
        setVisible(false);
        vista_control.mostrarVentana("admin");
    }//GEN-LAST:event_back_button3MousePressed

    private void back_button4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button4MousePressed
        setVisible(false);
        vista_control.mostrarVentana("admin");
    }//GEN-LAST:event_back_button4MousePressed

    private void back_button5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button5MousePressed
        setVisible(false);
        vista_control.mostrarVentana("admin");
    }//GEN-LAST:event_back_button5MousePressed

    private void back_button6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button6MousePressed
        setVisible(false);
        vista_control.mostrarVentana("admin");
    }//GEN-LAST:event_back_button6MousePressed

    private void name_area_box1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_area_box1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_area_box1ActionPerformed

    private void money_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_money_fieldKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_money_fieldKeyTyped

    private void money_field1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_money_field1KeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_money_field1KeyTyped

    private void numCama_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numCama_fieldKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if((numero < '0') || (numero > '9'))evt.consume();
    }//GEN-LAST:event_numCama_fieldKeyTyped

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AreaCama_label;
    private javax.swing.JButton actualArea_button;
    private javax.swing.JButton actualCama_button;
    private javax.swing.JButton actualEnfermero_button;
    private javax.swing.JButton actualMedico_button;
    private javax.swing.JLabel aditional_info_label;
    private javax.swing.JLabel aditional_info_label1;
    private javax.swing.JButton agregarhabilidades;
    private javax.swing.JPanel area_panel;
    private javax.swing.JComboBox<String> areas_box;
    private javax.swing.JButton back_button3;
    private javax.swing.JButton back_button4;
    private javax.swing.JButton back_button5;
    private javax.swing.JButton back_button6;
    private javax.swing.JComboBox<String> boss_box;
    private javax.swing.JComboBox<String> boss_box1;
    private javax.swing.JLabel boss_label;
    private javax.swing.JLabel boss_label1;
    private javax.swing.JPanel camas_panel;
    private javax.swing.JToolBar camas_toolbar;
    private javax.swing.JButton clear_button;
    private javax.swing.JButton clear_button1;
    private javax.swing.JButton clear_button2;
    private javax.swing.JButton clear_button3;
    private javax.swing.JLabel cod_Area_label;
    private javax.swing.JComboBox<String> cod_area_box;
    private javax.swing.JLabel cod_area_label;
    private javax.swing.JLabel cod_area_label1;
    private javax.swing.JTextField codarea_field;
    private javax.swing.JButton delete_button;
    private javax.swing.JButton delete_button1;
    private javax.swing.JButton delete_button2;
    private javax.swing.JButton delete_button3;
    private javax.swing.JLabel descriCama_label;
    private javax.swing.JLabel descrip_label;
    private javax.swing.JTextArea descriparea_field;
    private javax.swing.JTextArea descripcama_field;
    private javax.swing.JTextField dir_field;
    private javax.swing.JTextField dir_field1;
    private javax.swing.JLabel dir_label;
    private javax.swing.JLabel dir_label1;
    private javax.swing.ButtonGroup estadoCama_group;
    private javax.swing.JLabel estadoCama_label;
    private javax.swing.JTextField exper_field1;
    private javax.swing.JButton filter_button;
    private javax.swing.JButton filter_button1;
    private javax.swing.JButton filter_button2;
    private javax.swing.JButton filter_button3;
    private javax.swing.JButton guardarArea_button;
    private javax.swing.JButton guardarCama_button;
    private javax.swing.JButton guardarEnfermero_button;
    private javax.swing.JButton guardarMedico_button;
    private javax.swing.JTextField habilidad_field;
    private javax.swing.JTextField id_field;
    private javax.swing.JTextField id_field1;
    private javax.swing.JLabel id_label;
    private javax.swing.JLabel id_label1;
    private javax.swing.JLabel info_label;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JRadioButton libre_radio;
    private javax.swing.JTextField licence_field;
    private javax.swing.JLabel licence_label;
    private javax.swing.JButton limpiarhabilidades;
    private javax.swing.JTextField mail_field;
    private javax.swing.JTextField mail_field1;
    private javax.swing.JLabel mail_label;
    private javax.swing.JLabel mail_label1;
    private javax.swing.JTextField money_field;
    private javax.swing.JTextField money_field1;
    private javax.swing.JLabel money_label;
    private javax.swing.JLabel money_label1;
    private javax.swing.JLabel name_Area_label;
    private javax.swing.JComboBox<String> name_area_box1;
    private javax.swing.JTextField name_field;
    private javax.swing.JTextField name_field1;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel name_label1;
    private javax.swing.JTextField namearea_field;
    private javax.swing.JTextField numCama_field;
    private javax.swing.JLabel numCama_label;
    private javax.swing.JPanel panel_users;
    private javax.swing.JLabel personal_info_label;
    private javax.swing.JLabel personal_info_label1;
    private javax.swing.JLabel personal_info_label2;
    private javax.swing.JTextField position_field;
    private javax.swing.JTextField position_field1;
    private javax.swing.JLabel position_label;
    private javax.swing.JLabel position_label1;
    private javax.swing.JLabel profesional_info_label;
    private javax.swing.JLabel profesional_info_label1;
    private javax.swing.JPanel register_panel;
    private javax.swing.JLabel registers_label;
    private javax.swing.JLabel registers_label1;
    private javax.swing.JLabel registers_label2;
    private javax.swing.JLabel registers_label3;
    private javax.swing.JTable registers_table;
    private javax.swing.JTable registers_table2;
    private javax.swing.JTable registers_table3;
    private javax.swing.JTable registers_table4;
    private javax.swing.JScrollPane registros_scroll;
    private javax.swing.JButton search_button;
    private javax.swing.JButton search_button1;
    private javax.swing.JButton search_button2;
    private javax.swing.JButton search_button3;
    private javax.swing.JTextField special_field;
    private javax.swing.JLabel special_label;
    private javax.swing.JLabel special_label1;
    private javax.swing.JLabel special_label2;
    private javax.swing.JTextField tel_field;
    private javax.swing.JTextField tel_field1;
    private javax.swing.JLabel tel_label;
    private javax.swing.JLabel tel_label1;
    private javax.swing.JToolBar toolbar_users_areas1;
    private javax.swing.JToolBar toolbar_users_areas2;
    private javax.swing.JToolBar toolbar_users_areas3;
    private javax.swing.JLabel univer_label;
    private javax.swing.JTextField univers_field;
    private javax.swing.JPanel update_panel;
    private javax.swing.JRadioButton usada_radio;
    private javax.swing.JTabbedPane users_tabbed;
    // End of variables declaration//GEN-END:variables
}
