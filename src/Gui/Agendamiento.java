/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Controlador.*;
import javax.swing.JOptionPane;
import Logica.*;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JDayChooser;
import com.toedter.calendar.JMonthChooser;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ennuikibun
 */
public class Agendamiento extends javax.swing.JFrame {

    Vista_Control vista_control;
    Paciente_Control paciente_control;
    Area_Control area_control;
    Cita_Control cita_control;
    Persona_Control persona_control;
    Medico_Control medico_control;
    Medico medico_actual;
    Paciente paciente;
    Date fechaActual;
    private static final DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    int id_paciente_actual;
    Boolean agendar , consultar;
    
    public Agendamiento(Vista_Control vista) {
        super("Clínica X ~ || Agendamiento");
        initComponents();
        medico_area_group.add(medico_radio);
        medico_paciente_group.add(medico_radio1);
        medico_paciente_group.add(idPaciente_radio);
        medico_radio.setSelected(true);
        medico_radio1.setSelected(true);
        area_medicos_tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        citas_tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
       
        agendar_panel.setVisible(true);
        consultas_panel.setVisible(false);
        agendaMedica_panel.setVisible(false);
        
        save_cita_button.setEnabled(false);
        area_medicos_tabla.setEnabled(false);
        
        setCalendar();
        
        setLocationRelativeTo(null);
	setSize(1244, 644);
	setResizable(false);	
	
        
        vista_control = vista;
        paciente_control = new Paciente_Control();
        area_control = new Area_Control();
        cita_control = new Cita_Control();
        persona_control = new Persona_Control();
        medico_control = new Medico_Control();
        paciente = new Paciente();
        medico_actual = new Medico();
        
        fechaActual = new Date();
        agendar = false;
        consultar = false;
        citas_Calendar.getYearChooser().setEnabled(false); //año no modificable
        id_field1.setEnabled(false);
        searchID_button.setEnabled(false);
        
        addCombos();
       
    }
    
    private void addCombos(){
        Vector <Area> areas = new Vector<Area>();
        areas = area_control.listarAreas();
        areas_box.removeAllItems();
        for(int i = 0; i < areas.size(); i++){
            String a = areas.get(i).getNombre();
            areas_box.addItem(a);
        }
        Vector <String> medicos = new Vector<String>();
        medicos = persona_control.listarMedicos();
        medicos_box.removeAllItems();
        medico_box2.removeAllItems();
        for(int i = 0; i < medicos.size(); i++){
            String m = medicos.get(i);
            medicos_box.addItem(m);
            medico_box2.addItem(m);
        }
        DefaultComboBoxModel horas = new DefaultComboBoxModel(new String[] { "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00"
        , "13:00:00", "13:30:00", "14:00:00", "14:30:00", "15:00:00", "15:30:00", "16:00:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00"});
        horas_box.setModel(horas);        
    }
    
    private void setCalendar(){    
        citas_Calendar.setMinSelectableDate(fechaActual);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        medico_area_group = new javax.swing.ButtonGroup();
        medico_paciente_group = new javax.swing.ButtonGroup();
        opciones_panel = new javax.swing.JPanel();
        opciones_agendar_toolbar = new javax.swing.JToolBar();
        agendar_button = new javax.swing.JButton();
        consultas_button = new javax.swing.JButton();
        agenda_medica_button = new javax.swing.JButton();
        agendar_panel = new javax.swing.JPanel();
        search_button = new javax.swing.JButton();
        id_label = new javax.swing.JLabel();
        id_field = new javax.swing.JTextField();
        medico_radio = new javax.swing.JRadioButton();
        areas_box = new javax.swing.JComboBox<>();
        areas_horas_scroll = new javax.swing.JScrollPane();
        area_medicos_tabla = new javax.swing.JTable();
        save_cita_button = new javax.swing.JButton();
        citas_Calendar = new com.toedter.calendar.JCalendar();
        medicos_box = new javax.swing.JComboBox<>();
        horas_label = new javax.swing.JLabel();
        horas_box = new javax.swing.JComboBox<>();
        horiz_separator = new javax.swing.JSeparator();
        vert_separator = new javax.swing.JSeparator();
        back_button1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        clear_button2 = new javax.swing.JButton();
        buscarxArea_button = new javax.swing.JButton();
        consultas_panel = new javax.swing.JPanel();
        searchID_button = new javax.swing.JButton();
        id_field1 = new javax.swing.JTextField();
        medico_radio1 = new javax.swing.JRadioButton();
        idPaciente_radio = new javax.swing.JRadioButton();
        Citas_scrollPane = new javax.swing.JScrollPane();
        citas_tabla = new javax.swing.JTable();
        medico_box2 = new javax.swing.JComboBox<>();
        horz_separator2 = new javax.swing.JSeparator();
        citas_toolbar = new javax.swing.JToolBar();
        cancel_button = new javax.swing.JButton();
        filter_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        Listado_label = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();
        medico_citas = new javax.swing.JButton();
        agendaMedica_panel = new javax.swing.JPanel();
        search_button1 = new javax.swing.JButton();
        id_medico_label = new javax.swing.JLabel();
        id_medico_field = new javax.swing.JTextField();
        areas_horas_scroll1 = new javax.swing.JScrollPane();
        area_medicos_tabla1 = new javax.swing.JTable();
        horiz_separator1 = new javax.swing.JSeparator();
        vert_separator1 = new javax.swing.JSeparator();
        back_button2 = new javax.swing.JButton();
        nom_medico_label = new javax.swing.JLabel();
        nom_medico_field = new javax.swing.JTextField();
        agenda_label = new javax.swing.JLabel();
        agendamensual_label = new javax.swing.JLabel();
        toolbar_users_areas1 = new javax.swing.JToolBar();
        filter_button1 = new javax.swing.JButton();
        clear_button1 = new javax.swing.JButton();
        numCitas_label = new javax.swing.JLabel();
        numCitas_text = new javax.swing.JLabel();
        search_button3 = new javax.swing.JButton();
        cita_mes_chooser = new com.toedter.calendar.JMonthChooser();
        numCitas_text1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(730, 410));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        opciones_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        opciones_panel.setMaximumSize(new java.awt.Dimension(160, 660));
        opciones_panel.setPreferredSize(new java.awt.Dimension(160, 660));

        opciones_agendar_toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        opciones_agendar_toolbar.setRollover(true);
        opciones_agendar_toolbar.setPreferredSize(new java.awt.Dimension(162, 552));

        agendar_button.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        agendar_button.setForeground(new java.awt.Color(99, 110, 111));
        agendar_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/agendar_.png"))); // NOI18N
        agendar_button.setText("Agendar");
        agendar_button.setToolTipText("");
        agendar_button.setAlignmentY(0.1F);
        agendar_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agendar_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agendar_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agendar_button.setIconTextGap(3);
        agendar_button.setPreferredSize(new java.awt.Dimension(220, 180));
        agendar_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        agendar_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agendar_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agendar_buttonMousePressed(evt);
            }
        });
        agendar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendar_buttonActionPerformed(evt);
            }
        });
        opciones_agendar_toolbar.add(agendar_button);

        consultas_button.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        consultas_button.setForeground(new java.awt.Color(99, 110, 111));
        consultas_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/consultar_.png"))); // NOI18N
        consultas_button.setText("Consultas");
        consultas_button.setToolTipText("");
        consultas_button.setAlignmentY(0.1F);
        consultas_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        consultas_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        consultas_button.setFocusable(false);
        consultas_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        consultas_button.setIconTextGap(3);
        consultas_button.setPreferredSize(new java.awt.Dimension(220, 180));
        consultas_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        consultas_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        consultas_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                consultas_buttonMousePressed(evt);
            }
        });
        consultas_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultas_buttonActionPerformed(evt);
            }
        });
        opciones_agendar_toolbar.add(consultas_button);

        agenda_medica_button.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        agenda_medica_button.setForeground(new java.awt.Color(99, 110, 111));
        agenda_medica_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/medic_agenda_.png"))); // NOI18N
        agenda_medica_button.setText("Agenda Médica");
        agenda_medica_button.setToolTipText("");
        agenda_medica_button.setAlignmentY(0.1F);
        agenda_medica_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agenda_medica_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agenda_medica_button.setFocusable(false);
        agenda_medica_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agenda_medica_button.setIconTextGap(3);
        agenda_medica_button.setPreferredSize(new java.awt.Dimension(220, 180));
        agenda_medica_button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        agenda_medica_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agenda_medica_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agenda_medica_buttonMousePressed(evt);
            }
        });
        agenda_medica_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agenda_medica_buttonActionPerformed(evt);
            }
        });
        opciones_agendar_toolbar.add(agenda_medica_button);

        javax.swing.GroupLayout opciones_panelLayout = new javax.swing.GroupLayout(opciones_panel);
        opciones_panel.setLayout(opciones_panelLayout);
        opciones_panelLayout.setHorizontalGroup(
            opciones_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(opciones_agendar_toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
        opciones_panelLayout.setVerticalGroup(
            opciones_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opciones_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opciones_agendar_toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );

        getContentPane().add(opciones_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 10, 170, 600));

        agendar_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        search_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button.setForeground(new java.awt.Color(99, 110, 111));
        search_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/searchid_.png"))); // NOI18N
        search_button.setToolTipText("");
        search_button.setAlignmentY(0.1F);
        search_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button.setIconTextGap(5);
        search_button.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button.setName("doctor_button"); // NOI18N
        search_button.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_buttonMousePressed(evt);
            }
        });
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        id_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        id_label.setText("Id Paciente");

        id_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        medico_radio.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medico_radio.setText("Médico");
        medico_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medico_radioActionPerformed(evt);
            }
        });

        areas_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        areas_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        areas_box.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areas_boxItemStateChanged(evt);
            }
        });

        area_medicos_tabla.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        area_medicos_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Med.", "Médico"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        areas_horas_scroll.setViewportView(area_medicos_tabla);

        save_cita_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savecita_.png"))); // NOI18N
        save_cita_button.setBorderPainted(false);
        save_cita_button.setContentAreaFilled(false);
        save_cita_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save_cita_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/savepressedcita_.png"))); // NOI18N
        save_cita_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/saveselectedcita_.png"))); // NOI18N
        save_cita_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                save_cita_buttonMousePressed(evt);
            }
        });

        citas_Calendar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        citas_Calendar.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        citas_Calendar.setWeekOfYearVisible(false);

        medicos_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medicos_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        medicos_box.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medicos_boxItemStateChanged(evt);
            }
        });

        horas_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        horas_label.setText("Horas Disponibles");

        horas_box.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        horas_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        vert_separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        back_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button1.setBorderPainted(false);
        back_button1.setContentAreaFilled(false);
        back_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button1.setFocusable(false);
        back_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        jLabel1.setText("Área");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jLabel2.setText("Listar Médicos por Área");

        clear_button2.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button2.setForeground(new java.awt.Color(99, 110, 111));
        clear_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button2.setToolTipText("");
        clear_button2.setAlignmentY(0.1F);
        clear_button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button2.setFocusable(false);
        clear_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button2.setIconTextGap(5);
        clear_button2.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button2.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button2.setName("doctor_button"); // NOI18N
        clear_button2.setPreferredSize(new java.awt.Dimension(53, 53));
        clear_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button2MousePressed(evt);
            }
        });
        clear_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button2ActionPerformed(evt);
            }
        });

        buscarxArea_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        buscarxArea_button.setForeground(new java.awt.Color(99, 110, 111));
        buscarxArea_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/searchid_.png"))); // NOI18N
        buscarxArea_button.setToolTipText("");
        buscarxArea_button.setAlignmentY(0.1F);
        buscarxArea_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buscarxArea_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buscarxArea_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarxArea_button.setIconTextGap(5);
        buscarxArea_button.setMaximumSize(new java.awt.Dimension(129, 129));
        buscarxArea_button.setMinimumSize(new java.awt.Dimension(129, 129));
        buscarxArea_button.setName("doctor_button"); // NOI18N
        buscarxArea_button.setPreferredSize(new java.awt.Dimension(129, 53));
        buscarxArea_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarxArea_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscarxArea_buttonMousePressed(evt);
            }
        });
        buscarxArea_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarxArea_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout agendar_panelLayout = new javax.swing.GroupLayout(agendar_panel);
        agendar_panel.setLayout(agendar_panelLayout);
        agendar_panelLayout.setHorizontalGroup(
            agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendar_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(citas_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(agendar_panelLayout.createSequentialGroup()
                            .addComponent(medico_radio)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(medicos_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendar_panelLayout.createSequentialGroup()
                        .addComponent(horas_label)
                        .addGap(4, 4, 4)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save_cita_button, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(horas_box, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)))
                .addComponent(vert_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendar_panelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(areas_horas_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear_button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(agendar_panelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendar_panelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(65, 65, 65))
                            .addGroup(agendar_panelLayout.createSequentialGroup()
                                .addComponent(areas_box, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscarxArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(agendar_panelLayout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(id_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(back_button1)
                .addGap(29, 29, 29))
            .addComponent(horiz_separator, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        agendar_panelLayout.setVerticalGroup(
            agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendar_panelLayout.createSequentialGroup()
                .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendar_panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(id_label)
                                .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendar_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(horiz_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendar_panelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medico_radio)
                            .addComponent(medicos_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agendar_panelLayout.createSequentialGroup()
                                .addComponent(citas_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(horas_label)
                                    .addComponent(horas_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(save_cita_button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vert_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(agendar_panelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(areas_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buscarxArea_button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(agendar_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agendar_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(areas_horas_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(agendar_panelLayout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(clear_button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(agendar_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 1040, 600));

        consultas_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchID_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        searchID_button.setForeground(new java.awt.Color(99, 110, 111));
        searchID_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/searchid_.png"))); // NOI18N
        searchID_button.setToolTipText("");
        searchID_button.setAlignmentY(0.1F);
        searchID_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchID_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchID_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchID_button.setIconTextGap(5);
        searchID_button.setMaximumSize(new java.awt.Dimension(129, 129));
        searchID_button.setMinimumSize(new java.awt.Dimension(129, 129));
        searchID_button.setName("doctor_button"); // NOI18N
        searchID_button.setPreferredSize(new java.awt.Dimension(129, 53));
        searchID_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchID_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchID_buttonMousePressed(evt);
            }
        });
        searchID_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchID_buttonActionPerformed(evt);
            }
        });

        id_field1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        medico_radio1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medico_radio1.setText("Médico");
        medico_radio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medico_radio1ActionPerformed(evt);
            }
        });

        idPaciente_radio.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        idPaciente_radio.setText("Id Paciente");
        idPaciente_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPaciente_radioActionPerformed(evt);
            }
        });

        citas_tabla.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        citas_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Paciente", "Paciente", "Médico", "Fecha", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Citas_scrollPane.setViewportView(citas_tabla);
        if (citas_tabla.getColumnModel().getColumnCount() > 0) {
            citas_tabla.getColumnModel().getColumn(3).setMinWidth(200);
            citas_tabla.getColumnModel().getColumn(3).setMaxWidth(200);
            citas_tabla.getColumnModel().getColumn(4).setMinWidth(100);
            citas_tabla.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        medico_box2.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        medico_box2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medico_box2ItemStateChanged(evt);
            }
        });
        medico_box2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medico_box2ActionPerformed(evt);
            }
        });

        citas_toolbar.setBackground(new java.awt.Color(132, 182, 188));
        citas_toolbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        citas_toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        citas_toolbar.setRollover(true);
        citas_toolbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                citas_toolbarMousePressed(evt);
            }
        });

        cancel_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        cancel_button.setForeground(new java.awt.Color(99, 110, 111));
        cancel_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/cancel_ .png"))); // NOI18N
        cancel_button.setToolTipText("");
        cancel_button.setAlignmentY(0.1F);
        cancel_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancel_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancel_button.setFocusable(false);
        cancel_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancel_button.setIconTextGap(5);
        cancel_button.setMaximumSize(new java.awt.Dimension(129, 129));
        cancel_button.setMinimumSize(new java.awt.Dimension(129, 129));
        cancel_button.setName("doctor_button"); // NOI18N
        cancel_button.setPreferredSize(new java.awt.Dimension(129, 53));
        cancel_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancel_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancel_buttonMousePressed(evt);
            }
        });
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });
        citas_toolbar.add(cancel_button);

        filter_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button.setForeground(new java.awt.Color(99, 110, 111));
        filter_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button.setToolTipText("");
        filter_button.setAlignmentY(0.1F);
        filter_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button.setFocusable(false);
        filter_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button.setIconTextGap(5);
        filter_button.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button.setName("doctor_button"); // NOI18N
        filter_button.setPreferredSize(new java.awt.Dimension(129, 53));
        filter_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_buttonMousePressed(evt);
            }
        });
        filter_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_buttonActionPerformed(evt);
            }
        });
        citas_toolbar.add(filter_button);

        clear_button.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button.setForeground(new java.awt.Color(99, 110, 111));
        clear_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button.setToolTipText("");
        clear_button.setAlignmentY(0.1F);
        clear_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button.setFocusable(false);
        clear_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button.setIconTextGap(5);
        clear_button.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button.setName("doctor_button"); // NOI18N
        clear_button.setPreferredSize(new java.awt.Dimension(129, 53));
        clear_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_buttonMousePressed(evt);
            }
        });
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });
        citas_toolbar.add(clear_button);

        Listado_label.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        Listado_label.setText("Listado de Citas");

        back_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button.setBorderPainted(false);
        back_button.setContentAreaFilled(false);
        back_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button.setFocusable(false);
        back_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_buttonMousePressed(evt);
            }
        });

        medico_citas.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        medico_citas.setForeground(new java.awt.Color(99, 110, 111));
        medico_citas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/searchid_.png"))); // NOI18N
        medico_citas.setToolTipText("");
        medico_citas.setAlignmentY(0.1F);
        medico_citas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        medico_citas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        medico_citas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        medico_citas.setIconTextGap(5);
        medico_citas.setMaximumSize(new java.awt.Dimension(129, 129));
        medico_citas.setMinimumSize(new java.awt.Dimension(129, 129));
        medico_citas.setName("doctor_button"); // NOI18N
        medico_citas.setPreferredSize(new java.awt.Dimension(129, 53));
        medico_citas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        medico_citas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                medico_citasMousePressed(evt);
            }
        });
        medico_citas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medico_citasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultas_panelLayout = new javax.swing.GroupLayout(consultas_panel);
        consultas_panel.setLayout(consultas_panelLayout);
        consultas_panelLayout.setHorizontalGroup(
            consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(horz_separator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(consultas_panelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(medico_radio1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(medico_box2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medico_citas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idPaciente_radio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchID_button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(back_button)
                .addGap(29, 29, 29))
            .addGroup(consultas_panelLayout.createSequentialGroup()
                .addGroup(consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultas_panelLayout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(Listado_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 366, Short.MAX_VALUE))
                    .addGroup(consultas_panelLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(Citas_scrollPane)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(citas_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        consultas_panelLayout.setVerticalGroup(
            consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultas_panelLayout.createSequentialGroup()
                .addGroup(consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultas_panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(id_field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idPaciente_radio)
                                .addComponent(medico_box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(medico_radio1))
                            .addComponent(searchID_button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medico_citas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultas_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(horz_separator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Listado_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(consultas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultas_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Citas_scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultas_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(citas_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))))
        );

        getContentPane().add(consultas_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 1040, 600));

        agendaMedica_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        search_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button1.setForeground(new java.awt.Color(99, 110, 111));
        search_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/searchid_.png"))); // NOI18N
        search_button1.setToolTipText("");
        search_button1.setAlignmentY(0.1F);
        search_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button1.setIconTextGap(5);
        search_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button1.setName("doctor_button"); // NOI18N
        search_button1.setPreferredSize(new java.awt.Dimension(129, 53));
        search_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button1MousePressed(evt);
            }
        });
        search_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button1ActionPerformed(evt);
            }
        });

        id_medico_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        id_medico_label.setText("Id Médico");

        id_medico_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        area_medicos_tabla1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        area_medicos_tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Paciente", "Nombre Paciente", "Fecha", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        areas_horas_scroll1.setViewportView(area_medicos_tabla1);
        if (area_medicos_tabla1.getColumnModel().getColumnCount() > 0) {
            area_medicos_tabla1.getColumnModel().getColumn(0).setMinWidth(150);
            area_medicos_tabla1.getColumnModel().getColumn(0).setMaxWidth(150);
            area_medicos_tabla1.getColumnModel().getColumn(1).setMinWidth(230);
            area_medicos_tabla1.getColumnModel().getColumn(1).setMaxWidth(230);
            area_medicos_tabla1.getColumnModel().getColumn(3).setMinWidth(100);
            area_medicos_tabla1.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        vert_separator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        back_button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/back_ .png"))); // NOI18N
        back_button2.setBorderPainted(false);
        back_button2.setContentAreaFilled(false);
        back_button2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_button2.setFocusable(false);
        back_button2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back_button2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backpressed_ .png"))); // NOI18N
        back_button2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/backselected_ .png"))); // NOI18N
        back_button2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back_button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                back_button2MousePressed(evt);
            }
        });

        nom_medico_label.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        nom_medico_label.setText("Dr(a)");

        nom_medico_field.setEditable(false);
        nom_medico_field.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N

        agenda_label.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agenda_label.setText("Agenda del Mes");

        agendamensual_label.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        agendamensual_label.setText("Agenda Mensual");

        toolbar_users_areas1.setBackground(new java.awt.Color(132, 182, 188));
        toolbar_users_areas1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        toolbar_users_areas1.setRollover(true);
        toolbar_users_areas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toolbar_users_areas1MousePressed(evt);
            }
        });

        filter_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        filter_button1.setForeground(new java.awt.Color(99, 110, 111));
        filter_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/filter_.png"))); // NOI18N
        filter_button1.setToolTipText("");
        filter_button1.setAlignmentY(0.1F);
        filter_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filter_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter_button1.setFocusable(false);
        filter_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        filter_button1.setIconTextGap(5);
        filter_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        filter_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        filter_button1.setName("doctor_button"); // NOI18N
        filter_button1.setPreferredSize(new java.awt.Dimension(53, 53));
        filter_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        filter_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                filter_button1MousePressed(evt);
            }
        });
        filter_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(filter_button1);

        clear_button1.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        clear_button1.setForeground(new java.awt.Color(99, 110, 111));
        clear_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/clear_.png"))); // NOI18N
        clear_button1.setToolTipText("");
        clear_button1.setAlignmentY(0.1F);
        clear_button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear_button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear_button1.setFocusable(false);
        clear_button1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear_button1.setIconTextGap(5);
        clear_button1.setMaximumSize(new java.awt.Dimension(129, 129));
        clear_button1.setMinimumSize(new java.awt.Dimension(129, 129));
        clear_button1.setName("doctor_button"); // NOI18N
        clear_button1.setPreferredSize(new java.awt.Dimension(53, 53));
        clear_button1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clear_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clear_button1MousePressed(evt);
            }
        });
        clear_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_button1ActionPerformed(evt);
            }
        });
        toolbar_users_areas1.add(clear_button1);

        numCitas_label.setFont(new java.awt.Font("Lucida Bright", 1, 15)); // NOI18N
        numCitas_label.setText("No. Citas del Mes:");

        numCitas_text.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numCitas_text.setText("numero");

        search_button3.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        search_button3.setForeground(new java.awt.Color(99, 110, 111));
        search_button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/imgs/confirm_ .png"))); // NOI18N
        search_button3.setToolTipText("");
        search_button3.setAlignmentY(0.1F);
        search_button3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_button3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        search_button3.setIconTextGap(5);
        search_button3.setMaximumSize(new java.awt.Dimension(129, 129));
        search_button3.setMinimumSize(new java.awt.Dimension(129, 129));
        search_button3.setName("doctor_button"); // NOI18N
        search_button3.setPreferredSize(new java.awt.Dimension(53, 53));
        search_button3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        search_button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search_button3MousePressed(evt);
            }
        });
        search_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_button3ActionPerformed(evt);
            }
        });

        cita_mes_chooser.setDayChooser(null);
        cita_mes_chooser.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        cita_mes_chooser.setYearChooser(null);

        numCitas_text1.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        numCitas_text1.setText("Seleccione un Mes");

        javax.swing.GroupLayout agendaMedica_panelLayout = new javax.swing.GroupLayout(agendaMedica_panel);
        agendaMedica_panel.setLayout(agendaMedica_panelLayout);
        agendaMedica_panelLayout.setHorizontalGroup(
            agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(areas_horas_scroll1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(agenda_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(vert_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaMedica_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaMedica_panelLayout.createSequentialGroup()
                                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numCitas_text1)
                                    .addComponent(cita_mes_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(109, 109, 109))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaMedica_panelLayout.createSequentialGroup()
                                .addComponent(search_button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150))))
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(agendamensual_label))
                            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(numCitas_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numCitas_text))
                            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78))))
            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(id_medico_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id_medico_field, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(search_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(nom_medico_label)
                .addGap(3, 3, 3)
                .addComponent(nom_medico_field, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(back_button2)
                .addGap(29, 29, 29))
            .addComponent(horiz_separator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        agendaMedica_panelLayout.setVerticalGroup(
            agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaMedica_panelLayout.createSequentialGroup()
                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaMedica_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(id_medico_label)
                                .addComponent(id_medico_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nom_medico_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nom_medico_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)))
                .addComponent(horiz_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addComponent(agenda_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(areas_horas_scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                        .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vert_separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(agendaMedica_panelLayout.createSequentialGroup()
                                .addComponent(agendamensual_label)
                                .addGap(30, 30, 30)
                                .addComponent(numCitas_text1)
                                .addGap(34, 34, 34)
                                .addComponent(cita_mes_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search_button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(agendaMedica_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numCitas_text)
                                    .addComponent(numCitas_label))
                                .addGap(18, 18, 18)
                                .addComponent(toolbar_users_areas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(agendaMedica_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 1040, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agenda_medica_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agenda_medica_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agenda_medica_buttonActionPerformed

    private void consultas_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultas_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consultas_buttonActionPerformed

    private void agendar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendar_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agendar_buttonActionPerformed

    private void medico_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medico_radioActionPerformed
        area_medicos_tabla.setEnabled(false);
        areas_box.setEnabled(false);
        medicos_box.setEnabled(true);
        citas_Calendar.setEnabled(true);
        horas_box.setEnabled(true);
    }//GEN-LAST:event_medico_radioActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_buttonActionPerformed

    private void search_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_buttonMousePressed
        
        if(!id_field.getText().isEmpty()){
            id_paciente_actual = Integer.parseInt(id_field.getText());
            paciente = paciente_control.consultarPaciente(id_paciente_actual);
            if(paciente != null){
                save_cita_button.setEnabled(true);
            }else{
               JOptionPane.showMessageDialog(null, "No se encontró ningún paciente.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
               id_paciente_actual = 0;
            }
            
        }else
            JOptionPane.showMessageDialog(null, "El campo Id es necesario.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_search_buttonMousePressed

    private void agendar_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendar_buttonMousePressed
        agendaMedica_panel.setVisible(false);
        consultas_panel.setVisible(false);
        addCombos();
        agendar_panel.setVisible(true);
        
    }//GEN-LAST:event_agendar_buttonMousePressed

    private void searchID_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchID_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) citas_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }        
        if(!id_field1.getText().isEmpty()){
            id_paciente_actual = Integer.parseInt(id_field1.getText());
            paciente = paciente_control.consultarPaciente(id_paciente_actual);
            if(paciente != null){
                Vector<Cita> citas = new Vector<Cita>();
                citas = cita_control.filtrarCitaPaciente(id_paciente_actual);
                if(!citas.isEmpty()){
                    for(int i=0; i<citas.size(); i++){
                        String paciente = persona_control.consultarPersona(citas.get(i).getPaciente()).getNombre();
                        String medico = persona_control.consultarPersona(citas.get(i).getMedico()).getNombre();
                        String fecha = citas.get(i).getFecha();
                        String hora = citas.get(i).getHora();
                        model.addRow(new Object[]{citas.get(i).getPaciente(), paciente, medico, fecha, hora}); 
                    }
                }else
                    JOptionPane.showMessageDialog(null, "El paciente no tiene citas programadas.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
            }else{
               JOptionPane.showMessageDialog(null, "No se encontró ningún paciente.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
               id_paciente_actual = 0;
            }
            
        }else
            JOptionPane.showMessageDialog(null, "El campo Id es necesario.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_searchID_buttonMousePressed

    private void searchID_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchID_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchID_buttonActionPerformed

    private void medico_radio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medico_radio1ActionPerformed
        id_field1.setEnabled(false);
        searchID_button.setEnabled(false);
        medico_box2.setEnabled(true);
        medico_citas.setEnabled(true);
    }//GEN-LAST:event_medico_radio1ActionPerformed

    private void idPaciente_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPaciente_radioActionPerformed
        id_field1.setEnabled(true);
        searchID_button.setEnabled(true);
        medico_citas.setEnabled(false);
        medico_box2.setEnabled(false);
    }//GEN-LAST:event_idPaciente_radioActionPerformed

    private void filter_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) citas_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Vector<Cita> citas = new Vector<Cita>();
        JDateChooser inicio = new JDateChooser();
        JDateChooser fin = new JDateChooser();
        Object[] params = {"Desde:\n",inicio,"\nHasta:\n",fin};   
        if(JOptionPane.showConfirmDialog(null,params,"RANGO DE FECHAS", JOptionPane.PLAIN_MESSAGE)==JOptionPane.OK_OPTION){
            String fecha1 = sdf.format(((JDateChooser)params[1]).getDate());
            String fecha2 = sdf.format(((JDateChooser)params[3]).getDate());            
            citas = cita_control.filtrarFechas(fecha1, fecha2);
            if(!citas.isEmpty()){
                for(int i=0; i<citas.size(); i++){
                    String paciente = persona_control.consultarPersona(citas.get(i).getPaciente()).getNombre();
                    String medico = persona_control.consultarPersona(citas.get(i).getMedico()).getNombre();
                    String fecha = citas.get(i).getFecha();
                    String hora = citas.get(i).getHora();
                    model.addRow(new Object[]{citas.get(i).getPaciente(), paciente, medico, fecha, hora});
                }
            }else
                JOptionPane.showMessageDialog(null, "No existen citas en ese rango de Fechas.", "ALERTA!", JOptionPane.WARNING_MESSAGE);   
        }
    }//GEN-LAST:event_filter_buttonMousePressed

    private void filter_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_buttonActionPerformed

    private void cancel_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancel_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) citas_tabla.getModel();
        int row = citas_tabla.getSelectedRow();
        if(row != -1){
            if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea cancelar la cita?", "ALERTA!", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                int id = Integer.parseInt(model.getValueAt(row, 0).toString());
                int medico = persona_control.idMedico(model.getValueAt(row, 2).toString());
                String fecha = model.getValueAt(row, 3).toString();
                String hora = model.getValueAt(row, 4).toString();
                if(cita_control.eliminarCita(id, medico, fecha, hora)==1)
                    JOptionPane.showMessageDialog(null, "La cita ha sido cancelada exitósamente."); 
                else
                    JOptionPane.showMessageDialog(null, "Ha ocurrido un error.\nIntente de nuevo.", "ALERTA!", JOptionPane.ERROR_MESSAGE);
            }  
        }
        else
            JOptionPane.showMessageDialog(null, "Seleccione una cita válida.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_cancel_buttonMousePressed

    private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel_buttonActionPerformed

    private void clear_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) citas_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_buttonMousePressed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void citas_toolbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_citas_toolbarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_citas_toolbarMousePressed

    private void consultas_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultas_buttonMousePressed
        agendar_panel.setVisible(false);
        agendaMedica_panel.setVisible(false);
        consultar = true;
        addCombos();
        consultas_panel.setVisible(true);
        
    }//GEN-LAST:event_consultas_buttonMousePressed

    private void search_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button1ActionPerformed

    private void search_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button1MousePressed
        if(!id_medico_field.getText().isEmpty()){
            int id_medico = Integer.parseInt(id_medico_field.getText());
            medico_actual = medico_control.consultarMedico(id_medico);
            if(medico_actual !=null){
                search_button3.setEnabled(true);
                toolbar_users_areas1.setEnabled(true);
                String nombre = persona_control.consultarPersona(id_medico).getNombre();
                nom_medico_field.setText(nombre);
            }else{
               JOptionPane.showMessageDialog(null, "No se encontró ningún médico.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
            }
            
        }else
            JOptionPane.showMessageDialog(null, "El campo Id Médico es necesario.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_search_button1MousePressed

    private void search_button3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_button3MousePressed
        DefaultTableModel model = (DefaultTableModel) area_medicos_tabla1.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }  
        int mimes = cita_mes_chooser.getMonth()+1;
        int year = Calendar.getInstance().get(Calendar.YEAR);
        String fecha1 = ""+year+mimes+"01";
        String fecha2 = ""+year+mimes+"31";
        int id_medico = medico_actual.getId();
        Vector<Cita> citas = new Vector<Cita>();
        citas = cita_control.filtrarMes(fecha1, fecha2, id_medico);
        if(!citas.isEmpty()){
            numCitas_text.setText(String.valueOf(citas.size()));
            for(int i=0;i<citas.size();i++){
                int id_pac = citas.get(i).getPaciente();
                String nombre_pac = persona_control.consultarPersona(id_pac).getNombre();
                String fecha = citas.get(i).getFecha();
                String hora = citas.get(i).getHora();
                model.addRow(new Object[]{id_pac, nombre_pac, fecha, hora}); 
            }
        }else
            JOptionPane.showMessageDialog(null, "El médico no tiene citas agendadas en este mes.\nSeleccione de nuevo.", "ALERTA!", JOptionPane.ERROR_MESSAGE); 
    }//GEN-LAST:event_search_button3MousePressed

    private void search_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_button3ActionPerformed

    private void filter_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filter_button1MousePressed
        DefaultTableModel model = (DefaultTableModel) area_medicos_tabla1.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        String year = String.valueOf(Calendar.getInstance().get(Calendar.YEAR));
        Vector<Cita> citas = new Vector<Cita>();
        JMonthChooser mes = new JMonthChooser();
        JDayChooser dia = new JDayChooser();
        Object[] params = {"Seleccione un día del Mes\n\nMes:\n",mes,"\nDia:\n",dia};   
        if(JOptionPane.showConfirmDialog(null,params,"FILTRAR!", JOptionPane.PLAIN_MESSAGE)==JOptionPane.OK_OPTION){
            String mimes = String.valueOf(((JMonthChooser)params[1]).getMonth()+1);
            String midia = String.valueOf(((JDayChooser)params[3]).getDay());   
            String fecha = ""+year+"-"+mimes+"-"+midia+"";
            citas = cita_control.filtrarMes(fecha, fecha, medico_actual.getId());
            if(!citas.isEmpty()){
                for(int i=0;i<citas.size();i++){
                    int id_pac = citas.get(i).getPaciente();
                    String nombre_pac = persona_control.consultarPersona(id_pac).getNombre();
                    String fecha_ = citas.get(i).getFecha();
                    String hora = citas.get(i).getHora();
                    model.addRow(new Object[]{id_pac, nombre_pac, fecha_, hora}); 
                }
            }else
                JOptionPane.showMessageDialog(null, "No existen citas en ese día.", "ALERTA!", JOptionPane.WARNING_MESSAGE);   
        }
    }//GEN-LAST:event_filter_button1MousePressed

    private void filter_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_button1ActionPerformed

    private void clear_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button1MousePressed
        DefaultTableModel model = (DefaultTableModel) area_medicos_tabla1.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button1MousePressed

    private void clear_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button1ActionPerformed

    private void toolbar_users_areas1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolbar_users_areas1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_users_areas1MousePressed

    private void agenda_medica_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agenda_medica_buttonMousePressed
        consultas_panel.setVisible(false);
        agendar_panel.setVisible(false);
        agendaMedica_panel.setVisible(true);
        search_button3.setEnabled(false);
        agendar = true;
    }//GEN-LAST:event_agenda_medica_buttonMousePressed

    private void save_cita_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_save_cita_buttonMousePressed
        if (medico_radio.isSelected()){ 
            Date fechaSelec = new Date();
            fechaSelec = citas_Calendar.getDate();
            String fecha = sdf.format(fechaSelec).toString();
            String hora = horas_box.getSelectedItem().toString();
            
            String medico = medicos_box.getSelectedItem().toString();
            Vector<Cita> citas = new Vector<Cita>();
            int id_medico = persona_control.idMedico(medico);
            citas = cita_control.filtrarCitaMedico(id_medico);
            if(cita_control.validarCita(citas, fecha, hora)){
                if(cita_control.insertarCita(id_paciente_actual, fecha, hora, id_medico, 25000) == 1)
                    JOptionPane.showMessageDialog(null, "Id Paciente: "+id_paciente_actual+"\nFecha: "+fecha+" "+hora+"\nMédico: "+medico+"", "CITA AGENDADA!", JOptionPane.WARNING_MESSAGE);
                else
                    JOptionPane.showMessageDialog(null, "La cita no pudo agendarse.\nIntente de nuevo.", "ALERTA!", JOptionPane.ERROR_MESSAGE);             
            }else
                JOptionPane.showMessageDialog(null, "El día y/o la hora de la cita NO se encuentra disponible.\nSeleccione de nuevo.", "ALERTA!", JOptionPane.ERROR_MESSAGE);       
        }else
            JOptionPane.showMessageDialog(null, "Selección inválida.\nIntente de Nuevo.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_save_cita_buttonMousePressed

    private void areas_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areas_boxItemStateChanged

    }//GEN-LAST:event_areas_boxItemStateChanged

    private void medicos_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medicos_boxItemStateChanged
    
    }//GEN-LAST:event_medicos_boxItemStateChanged
 
    private void back_button1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button1MousePressed
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_button1MousePressed

    private void back_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMousePressed
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_buttonMousePressed

    private void medico_box2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medico_box2ActionPerformed

        
    }//GEN-LAST:event_medico_box2ActionPerformed

    private void medico_box2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medico_box2ItemStateChanged
  
    }//GEN-LAST:event_medico_box2ItemStateChanged

    private void back_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_button2MousePressed
        setVisible(false);
        vista_control.mostrarVentana("general");
    }//GEN-LAST:event_back_button2MousePressed

    private void clear_button2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_button2MousePressed
        DefaultTableModel model = (DefaultTableModel) area_medicos_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_clear_button2MousePressed

    private void clear_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_button2ActionPerformed

    private void medico_citasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medico_citasMousePressed
        DefaultTableModel model = (DefaultTableModel) citas_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        String medico = medicos_box.getSelectedItem().toString();
        Vector<Cita> citas = new Vector<Cita>();
        citas = cita_control.filtrarCitaMedico(persona_control.idMedico(medico));
        if(!citas.isEmpty()){
            for(int i=0; i<citas.size(); i++){
                String paciente = persona_control.consultarPersona(citas.get(i).getPaciente()).getNombre();
                String fecha = citas.get(i).getFecha();
                String hora = citas.get(i).getHora();
                model.addRow(new Object[]{citas.get(i).getPaciente(), paciente, medico, fecha, hora});
            }
        }
        else
            JOptionPane.showMessageDialog(null, "No hay citas con este médico.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_medico_citasMousePressed

    private void medico_citasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medico_citasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medico_citasActionPerformed

    private void buscarxArea_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarxArea_buttonMousePressed
        DefaultTableModel model = (DefaultTableModel) area_medicos_tabla.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        String area = areas_box.getSelectedItem().toString();
        Vector<Medico> medicos = new Vector<Medico>();
        Vector<Cita> citas = new Vector<Cita>();
        medicos = medico_control.filtrarMedico(area);
        if(!medicos.isEmpty()){
            for(int i=0; i<medicos.size();i++){
                int id = medicos.get(i).getId();
                String nombre = persona_control.consultarPersona(id).getNombre();
                model.addRow(new Object[]{id, nombre}); 
            }              
        }
        else
            JOptionPane.showMessageDialog(null, "No hay médicos disponibles en esta area.", "ALERTA!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_buscarxArea_buttonMousePressed

    private void buscarxArea_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarxArea_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarxArea_buttonActionPerformed
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Citas_scrollPane;
    private javax.swing.JLabel Listado_label;
    private javax.swing.JPanel agendaMedica_panel;
    private javax.swing.JLabel agenda_label;
    private javax.swing.JButton agenda_medica_button;
    private javax.swing.JLabel agendamensual_label;
    private javax.swing.JButton agendar_button;
    private javax.swing.JPanel agendar_panel;
    private javax.swing.JTable area_medicos_tabla;
    private javax.swing.JTable area_medicos_tabla1;
    private javax.swing.JComboBox<String> areas_box;
    private javax.swing.JScrollPane areas_horas_scroll;
    private javax.swing.JScrollPane areas_horas_scroll1;
    private javax.swing.JButton back_button;
    private javax.swing.JButton back_button1;
    private javax.swing.JButton back_button2;
    private javax.swing.JButton buscarxArea_button;
    private javax.swing.JButton cancel_button;
    private com.toedter.calendar.JMonthChooser cita_mes_chooser;
    private com.toedter.calendar.JCalendar citas_Calendar;
    private javax.swing.JTable citas_tabla;
    private javax.swing.JToolBar citas_toolbar;
    private javax.swing.JButton clear_button;
    private javax.swing.JButton clear_button1;
    private javax.swing.JButton clear_button2;
    private javax.swing.JButton consultas_button;
    private javax.swing.JPanel consultas_panel;
    private javax.swing.JButton filter_button;
    private javax.swing.JButton filter_button1;
    private javax.swing.JComboBox<String> horas_box;
    private javax.swing.JLabel horas_label;
    private javax.swing.JSeparator horiz_separator;
    private javax.swing.JSeparator horiz_separator1;
    private javax.swing.JSeparator horz_separator2;
    private javax.swing.JRadioButton idPaciente_radio;
    private javax.swing.JTextField id_field;
    private javax.swing.JTextField id_field1;
    private javax.swing.JLabel id_label;
    private javax.swing.JTextField id_medico_field;
    private javax.swing.JLabel id_medico_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.ButtonGroup medico_area_group;
    private javax.swing.JComboBox<String> medico_box2;
    private javax.swing.JButton medico_citas;
    private javax.swing.ButtonGroup medico_paciente_group;
    private javax.swing.JRadioButton medico_radio;
    private javax.swing.JRadioButton medico_radio1;
    private javax.swing.JComboBox<String> medicos_box;
    private javax.swing.JTextField nom_medico_field;
    private javax.swing.JLabel nom_medico_label;
    private javax.swing.JLabel numCitas_label;
    private javax.swing.JLabel numCitas_text;
    private javax.swing.JLabel numCitas_text1;
    private javax.swing.JToolBar opciones_agendar_toolbar;
    private javax.swing.JPanel opciones_panel;
    private javax.swing.JButton save_cita_button;
    private javax.swing.JButton searchID_button;
    private javax.swing.JButton search_button;
    private javax.swing.JButton search_button1;
    private javax.swing.JButton search_button3;
    private javax.swing.JToolBar toolbar_users_areas1;
    private javax.swing.JSeparator vert_separator;
    private javax.swing.JSeparator vert_separator1;
    // End of variables declaration//GEN-END:variables
}
